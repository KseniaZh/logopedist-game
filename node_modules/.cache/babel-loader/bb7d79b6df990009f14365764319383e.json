{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\logopedist-game\\\\src\\\\UserInterface\\\\Buttons\\\\ButtonAutomationBlock.js\";\nimport React from 'react';\n\nfunction ButtonAutomationBlock(props) {\n  const numberButton = props.number;\n  const numberButtonBlock = props.numberBlock; // прописана возможность задавать класс через store и менять цвет каждой буквы\n  // но сейчас реализована прописовка через css и родственные связи\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.classname.classnameButton,\n    onClick: () => props.onclick(numberButton, numberButtonBlock),\n    tabIndex: props.tabindex,\n    id: numberButton,\n    style: {\n      opacity: `${props.styleOpacityButton}`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: props.classname.classnameLetter_1,\n      children: props.names.letter_1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: props.classname.classnameLetter_2,\n      children: props.names.letter_2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: props.classname.classnameLetter_3,\n      children: props.names.letter_3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ButtonAutomationBlock;\nexport default ButtonAutomationBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonAutomationBlock\");","map":{"version":3,"sources":["D:/Обучение/React/projects/logopedist-game/src/UserInterface/Buttons/ButtonAutomationBlock.js"],"names":["React","ButtonAutomationBlock","props","numberButton","number","numberButtonBlock","numberBlock","classname","classnameButton","onclick","tabindex","opacity","styleOpacityButton","classnameLetter_1","names","letter_1","classnameLetter_2","letter_2","classnameLetter_3","letter_3"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AAElC,QAAMC,YAAY,GAAGD,KAAK,CAACE,MAA3B;AACA,QAAMC,iBAAiB,GAAGH,KAAK,CAACI,WAAhC,CAHkC,CAKlC;AACA;;AAEA,sBAEI;AACI,IAAA,SAAS,EAAEJ,KAAK,CAACK,SAAN,CAAgBC,eAD/B;AAEI,IAAA,OAAO,EAAE,MAAMN,KAAK,CAACO,OAAN,CAAcN,YAAd,EAA4BE,iBAA5B,CAFnB;AAGI,IAAA,QAAQ,EAAEH,KAAK,CAACQ,QAHpB;AAII,IAAA,EAAE,EAAEP,YAJR;AAKI,IAAA,KAAK,EAAE;AAAEQ,MAAAA,OAAO,EAAG,GAAET,KAAK,CAACU,kBAAmB;AAAvC,KALX;AAAA,4BAOQ;AACI,MAAA,SAAS,EAAEV,KAAK,CAACK,SAAN,CAAgBM,iBAD/B;AAAA,gBAGKX,KAAK,CAACY,KAAN,CAAYC;AAHjB;AAAA;AAAA;AAAA;AAAA,YAPR,eAaQ;AACI,MAAA,SAAS,EAAEb,KAAK,CAACK,SAAN,CAAgBS,iBAD/B;AAAA,gBAGKd,KAAK,CAACY,KAAN,CAAYG;AAHjB;AAAA;AAAA;AAAA;AAAA,YAbR,eAmBQ;AACI,MAAA,SAAS,EAAEf,KAAK,CAACK,SAAN,CAAgBW,iBAD/B;AAAA,gBAGKhB,KAAK,CAACY,KAAN,CAAYK;AAHjB;AAAA;AAAA;AAAA;AAAA,YAnBR;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AA8BH;;KAtCQlB,qB;AAwCT,eAAeA,qBAAf","sourcesContent":["import React from 'react';\r\n\r\n\r\nfunction ButtonAutomationBlock(props) {\r\n\r\n    const numberButton = props.number;\r\n    const numberButtonBlock = props.numberBlock;\r\n\r\n    // прописана возможность задавать класс через store и менять цвет каждой буквы\r\n    // но сейчас реализована прописовка через css и родственные связи\r\n\r\n    return (\r\n\r\n        <div\r\n            className={props.classname.classnameButton}\r\n            onClick={() => props.onclick(numberButton, numberButtonBlock)}\r\n            tabIndex={props.tabindex}\r\n            id={numberButton}\r\n            style={{ opacity: `${props.styleOpacityButton}` }}\r\n            >    \r\n                <span\r\n                    className={props.classname.classnameLetter_1}\r\n                >\r\n                    {props.names.letter_1}\r\n                </span>\r\n\r\n                <span\r\n                    className={props.classname.classnameLetter_2}\r\n                >\r\n                    {props.names.letter_2}\r\n                </span>\r\n\r\n                <span\r\n                    className={props.classname.classnameLetter_3}\r\n                >\r\n                    {props.names.letter_3}\r\n                </span>\r\n\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ButtonAutomationBlock\r\n"]},"metadata":{},"sourceType":"module"}