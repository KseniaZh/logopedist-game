{"ast":null,"code":"import { LETTERS_SELECT } from \"./types\";\nconst initialState = {\n  'letterSelect': 'X',\n  'letters': [{\n    type: 1,\n    name: \"А\"\n  }, {\n    type: 2,\n    name: \"Б\"\n  }, {\n    type: 2,\n    name: \"В\"\n  }, {\n    type: 2,\n    name: \"Г\"\n  }, {\n    type: 2,\n    name: \"Д\"\n  }, {\n    type: 1,\n    name: \"Е\"\n  }, {\n    type: 1,\n    name: \"Ё\"\n  }, {\n    type: 2,\n    name: \"Ж\"\n  }, {\n    type: 2,\n    name: \"З\"\n  }, {\n    type: 1,\n    name: \"И\"\n  }, {\n    type: 3,\n    name: \"Й\"\n  }, {\n    type: 2,\n    name: \"К\"\n  }, {\n    type: 2,\n    name: \"Л\"\n  }, {\n    type: 2,\n    name: \"М\"\n  }, {\n    type: 2,\n    name: \"Н\"\n  }, {\n    type: 1,\n    name: \"О\"\n  }, {\n    type: 2,\n    name: \"П\"\n  }, {\n    type: 2,\n    name: \"р\"\n  }, {\n    type: 2,\n    name: \"С\"\n  }, {\n    type: 2,\n    name: \"Т\"\n  }, {\n    type: 1,\n    name: \"У\"\n  }, {\n    type: 2,\n    name: \"Ф\"\n  }, {\n    type: 2,\n    name: \"Ц\"\n  }, {\n    type: 2,\n    name: \"Ч\"\n  }, {\n    type: 2,\n    name: \"Ш\"\n  }, {\n    type: 2,\n    name: \"Щ\"\n  }, {\n    type: 3,\n    name: \"Ъ\"\n  }, {\n    type: 1,\n    name: \"Ы\"\n  }, {\n    type: 3,\n    name: \"Ь\"\n  }, {\n    type: 1,\n    name: \"Э\"\n  }, {\n    type: 1,\n    name: \"Ю\"\n  }, {\n    type: 1,\n    name: \"Я\"\n  }]\n};\n\nconst stateLetters = (state = initialState, action) => {\n  switch (action.type) {\n    case LETTERS_SELECT:\n      return { ...state,\n        letterSelect: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default stateLetters;","map":{"version":3,"sources":["D:/Обучение/React/projects/logopedist-game/src/store/LettersBlocks/reducerLetters.js"],"names":["LETTERS_SELECT","initialState","type","name","stateLetters","state","action","letterSelect","payload"],"mappings":"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","sourcesContent":["import {\r\n    LETTERS_SELECT,\r\n} from \"./types\";\r\n\r\nconst initialState = {\r\n    'letterSelect': 'X',\r\n    'letters': [\r\n        { type: 1, name: \"А\" },\r\n        { type: 2, name: \"Б\" },\r\n        { type: 2, name: \"В\" },\r\n        { type: 2, name: \"Г\" },\r\n        { type: 2, name: \"Д\" },\r\n        { type: 1, name: \"Е\" },\r\n        { type: 1, name: \"Ё\" },\r\n        { type: 2, name: \"Ж\" },\r\n        { type: 2, name: \"З\" },\r\n        { type: 1, name: \"И\" },\r\n        { type: 3, name: \"Й\" },\r\n        { type: 2, name: \"К\" },\r\n        { type: 2, name: \"Л\" },\r\n        { type: 2, name: \"М\" },\r\n        { type: 2, name: \"Н\" },\r\n        { type: 1, name: \"О\" },\r\n        { type: 2, name: \"П\" },\r\n        { type: 2, name: \"р\" },\r\n        { type: 2, name: \"С\" },\r\n        { type: 2, name: \"Т\" },\r\n        { type: 1, name: \"У\" },\r\n        { type: 2, name: \"Ф\" },\r\n        { type: 2, name: \"Ц\" },\r\n        { type: 2, name: \"Ч\" },\r\n        { type: 2, name: \"Ш\" },\r\n        { type: 2, name: \"Щ\" },\r\n        { type: 3, name: \"Ъ\" },\r\n        { type: 1, name: \"Ы\" },\r\n        { type: 3, name: \"Ь\" },\r\n        { type: 1, name: \"Э\" },\r\n        { type: 1, name: \"Ю\" },\r\n        { type: 1, name: \"Я\" },\r\n    ],\r\n};\r\n\r\n\r\n\r\nconst stateLetters = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case LETTERS_SELECT:\r\n            return {\r\n                ...state,\r\n                letterSelect: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default stateLetters"]},"metadata":{},"sourceType":"module"}