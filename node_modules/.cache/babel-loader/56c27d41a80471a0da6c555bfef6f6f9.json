{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\logopedist-game\\\\src\\\\containers\\\\Navigation\\\\Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport NavigationConsole from '../../UserInterface/NavigationConsole';\nimport WindowBlind from '../../components/Header/WindowBlind';\nimport Button from '../../UserInterface/Buttons/Button';\nimport { beginAgainAllFlagsFinalLetterNull } from '../../store/LevelCompleted/actionsFinalLetter';\nimport { beginAgainAllFlagsAllLevelsNull } from '../../store/LevelCompleted/actionsLevelFinal';\nimport { beginAgainNullAllFlagsAllBlocksAllLetters } from '../../store/LevelCompleted/actionsButtonBlockFinal';\nimport { beginAgainNullAllFlagsAllButtonClick } from '../../store/LevelCompleted/actionsLevelCompl';\nimport { beginAgainAllFlagsFinalLetterWordsNull } from '../../store/LevelCompleted/actionsFinalLetterWords';\nimport { beginAgainAllLevelsWordsNull } from '../../store/LevelCompleted/actionsLevelWordsFinal';\n\nfunction Header(props) {\n  _s();\n\n  const stateNavigationConsole = [{\n    to: '/',\n    name: 'Home'\n  }, {\n    to: '/prizeShop',\n    name: 'Выбор награды'\n  }, {\n    to: '/progress',\n    name: 'Прогресс'\n  }];\n  const [isOpen, setIsOpen] = useState(false);\n  const navStyle = ['Navigation'];\n\n  if (!isOpen) {\n    navStyle.push('close');\n  }\n\n  ;\n\n  const hendlerNavHide = () => {\n    setIsOpen(false);\n  };\n\n  const hendlerNavShow = () => {\n    setIsOpen(true);\n  };\n\n  const dispatch = useDispatch(); //набор картинок для призов\n\n  const stateImages = useSelector(state => state.stateImages);\n  const letterProgressPrizes = useSelector(state => state.stateLevelEnd); //прогресс букв и полученных призов\n  //переменные флагов карточек слогов\n\n  const stateLevelCompleted = useSelector(state => state.stateLevelCompleted); //флаги всех кнопок ButtonBlocks\n\n  const stateLevelFinal = useSelector(state => state.stateLevelFinal); //флаги пройденных блоков в уровне\n\n  const stateButtonBlockFinal = useSelector(state => state.stateButtonBlockFinal); //флаги уровней в букве\n\n  const stateFinalLetter = useSelector(state => state.stateFinalLetter); //флаг буква пройдена\n  //переменные флагов уровней слов\n\n  const stateLevelWordsFinal = useSelector(state => state.stateLevelWordsFinal); //флаги прохождения уровней в букве\n\n  const stateFinalLetterWords = useSelector(state => state.stateFinalLetterWords); // флаги прохождения буквы\n\n  const hendlerBeginAgainNullAllFlags = () => {\n    //сброс всех уровней. Все, кроме наград, возвращается к исходному состоянию\n    // СЛОГИ\n    //флаг прохождения букв\n    dispatch(beginAgainAllFlagsFinalLetterNull()); //уровни всех буквы меняем на false\n\n    dispatch(beginAgainAllFlagsAllLevelsNull()); // false флаги во всех блоках на всех уровнях\n\n    dispatch(beginAgainNullAllFlagsAllBlocksAllLetters()); //false все клики по кнопкам во всех карточках\n\n    dispatch(beginAgainNullAllFlagsAllButtonClick()); // СЛОВА\n    //флаг прохождения букв\n\n    dispatch(beginAgainAllFlagsFinalLetterWordsNull()); // флаги прохождения уровней буквы возвращаем на false\n\n    dispatch(beginAgainAllLevelsWordsNull());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      onMouseOver: hendlerNavShow,\n      onMouseOut: hendlerNavHide,\n      onClick: hendlerNavHide,\n      className: navStyle.join(' '),\n      children: [/*#__PURE__*/_jsxDEV(NavigationConsole, {\n        stateNavigationConsole: stateNavigationConsole,\n        onclick: () => console.log('click Header NavigationConsole')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        classname: \"null-all-letters-begin-again\",\n        onclick: hendlerBeginAgainNullAllFlags,\n        name: \"\\u0412\\u0421\\u0415 \\u0411\\u0423\\u041A-\\u0412\\u042B \\u0421\\u041D\\u0410-\\u0427\\u0410-\\u041B\\u0410\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), isOpen ? /*#__PURE__*/_jsxDEV(WindowBlind, {\n      onclick: hendlerNavHide,\n      classname: \"NavigationWindowBlind\",\n      letterProgressPrizes: letterProgressPrizes,\n      stateImages: stateImages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Header, \"nwoeV2oilmgfnyMguQu7Y4y52/A=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Header;\nexport default connect()(Header);\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["D:/Обучение/React/projects/logopedist-game/src/containers/Navigation/Header.js"],"names":["React","useState","connect","useDispatch","useSelector","NavigationConsole","WindowBlind","Button","beginAgainAllFlagsFinalLetterNull","beginAgainAllFlagsAllLevelsNull","beginAgainNullAllFlagsAllBlocksAllLetters","beginAgainNullAllFlagsAllButtonClick","beginAgainAllFlagsFinalLetterWordsNull","beginAgainAllLevelsWordsNull","Header","props","stateNavigationConsole","to","name","isOpen","setIsOpen","navStyle","push","hendlerNavHide","hendlerNavShow","dispatch","stateImages","state","letterProgressPrizes","stateLevelEnd","stateLevelCompleted","stateLevelFinal","stateButtonBlockFinal","stateFinalLetter","stateLevelWordsFinal","stateFinalLetterWords","hendlerBeginAgainNullAllFlags","join","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,aAAlD;AAEA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AAEA,SAASC,iCAAT,QAAkD,+CAAlD;AACA,SAASC,+BAAT,QAAgD,8CAAhD;AACA,SAASC,yCAAT,QAA0D,oDAA1D;AACA,SAASC,oCAAT,QAAqD,8CAArD;AACA,SAASC,sCAAT,QAAuD,oDAAvD;AACA,SAASC,4BAAT,QAA6C,mDAA7C;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAEnB,QAAMC,sBAAsB,GAAG,CAC3B;AACIC,IAAAA,EAAE,EAAE,GADR;AAEIC,IAAAA,IAAI,EAAE;AAFV,GAD2B,EAK3B;AACID,IAAAA,EAAE,EAAE,YADR;AAEIC,IAAAA,IAAI,EAAE;AAFV,GAL2B,EAS3B;AACID,IAAAA,EAAE,EAAE,WADR;AAEIC,IAAAA,IAAI,EAAE;AAFV,GAT2B,CAA/B;AAeA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMoB,QAAQ,GAAG,CAAC,YAAD,CAAjB;;AAEA,MAAI,CAACF,MAAL,EAAa;AACTE,IAAAA,QAAQ,CAACC,IAAT,CAAc,OAAd;AACH;;AAAA;;AAED,QAAMC,cAAc,GAAG,MAAM;AACzBH,IAAAA,SAAS,CAAC,KAAD,CAAT;AACH,GAFD;;AAGA,QAAMI,cAAc,GAAG,MAAM;AACzBJ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH,GAFD;;AAIA,QAAMK,QAAQ,GAAGtB,WAAW,EAA5B,CA/BmB,CAiCnB;;AACA,QAAMuB,WAAW,GAAGtB,WAAW,CAACuB,KAAK,IAAIA,KAAK,CAACD,WAAhB,CAA/B;AACA,QAAME,oBAAoB,GAAGxB,WAAW,CAACuB,KAAK,IAAIA,KAAK,CAACE,aAAhB,CAAxC,CAnCmB,CAmCqD;AAExE;;AACA,QAAMC,mBAAmB,GAAG1B,WAAW,CAACuB,KAAK,IAAIA,KAAK,CAACG,mBAAhB,CAAvC,CAtCmB,CAsCyD;;AAC5E,QAAMC,eAAe,GAAG3B,WAAW,CAACuB,KAAK,IAAIA,KAAK,CAACI,eAAhB,CAAnC,CAvCmB,CAuCkD;;AACrE,QAAMC,qBAAqB,GAAG5B,WAAW,CAACuB,KAAK,IAAIA,KAAK,CAACK,qBAAhB,CAAzC,CAxCmB,CAwC6D;;AAChF,QAAMC,gBAAgB,GAAG7B,WAAW,CAACuB,KAAK,IAAIA,KAAK,CAACM,gBAAhB,CAApC,CAzCmB,CAyCoD;AAEvE;;AACA,QAAMC,oBAAoB,GAAG9B,WAAW,CAACuB,KAAK,IAAIA,KAAK,CAACO,oBAAhB,CAAxC,CA5CmB,CA4C4D;;AAC/E,QAAMC,qBAAqB,GAAG/B,WAAW,CAACuB,KAAK,IAAIA,KAAK,CAACQ,qBAAhB,CAAzC,CA7CmB,CA6C6D;;AAEhF,QAAMC,6BAA6B,GAAG,MAAM;AACxC;AAED;AAEC;AACAX,IAAAA,QAAQ,CAACjB,iCAAiC,EAAlC,CAAR,CANwC,CAQxC;;AACAiB,IAAAA,QAAQ,CAAChB,+BAA+B,EAAhC,CAAR,CATwC,CAWxC;;AACAgB,IAAAA,QAAQ,CAACf,yCAAyC,EAA1C,CAAR,CAZwC,CAcxC;;AACAe,IAAAA,QAAQ,CAACd,oCAAoC,EAArC,CAAR,CAfwC,CAiBxC;AAEA;;AACAc,IAAAA,QAAQ,CAACb,sCAAsC,EAAvC,CAAR,CApBwC,CAsBxC;;AACAa,IAAAA,QAAQ,CAACZ,4BAA4B,EAA7B,CAAR;AACH,GAxBD;;AA0BA,sBACI;AAAA,4BACI;AACI,MAAA,WAAW,EAAEW,cADjB;AAEI,MAAA,UAAU,EAAED,cAFhB;AAGI,MAAA,OAAO,EAAEA,cAHb;AAII,MAAA,SAAS,EAAEF,QAAQ,CAACgB,IAAT,CAAc,GAAd,CAJf;AAAA,8BAMI,QAAC,iBAAD;AACI,QAAA,sBAAsB,EAAErB,sBAD5B;AAEI,QAAA,OAAO,EAAE,MAAIsB,OAAO,CAACC,GAAR,CAAY,gCAAZ;AAFjB;AAAA;AAAA;AAAA;AAAA,cANJ,eAUI,QAAC,MAAD;AACI,QAAA,SAAS,EAAC,8BADd;AAEI,QAAA,OAAO,EAAEH,6BAFb;AAGI,QAAA,IAAI,EAAC;AAHT;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAqBQjB,MAAM,gBACF,QAAC,WAAD;AACI,MAAA,OAAO,EAAEI,cADb;AAEI,MAAA,SAAS,EAAC,uBAFd;AAGI,MAAA,oBAAoB,EAAEK,oBAH1B;AAII,MAAA,WAAW,EAAEF;AAJjB;AAAA;AAAA;AAAA;AAAA,YADE,GAOA,IA5Bd;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH;;GA5GQZ,M;UA+BYX,W,EAGGC,W,EACSA,W,EAGDA,W,EACJA,W,EACMA,W,EACLA,W,EAGIA,W,EACCA,W;;;KA7CzBU,M;AA6GT,eAAeZ,OAAO,GAAGY,MAAH,CAAtB","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport NavigationConsole from '../../UserInterface/NavigationConsole';\r\nimport WindowBlind from '../../components/Header/WindowBlind';\r\nimport Button from '../../UserInterface/Buttons/Button';\r\n\r\nimport { beginAgainAllFlagsFinalLetterNull } from '../../store/LevelCompleted/actionsFinalLetter';\r\nimport { beginAgainAllFlagsAllLevelsNull } from '../../store/LevelCompleted/actionsLevelFinal';\r\nimport { beginAgainNullAllFlagsAllBlocksAllLetters } from '../../store/LevelCompleted/actionsButtonBlockFinal';\r\nimport { beginAgainNullAllFlagsAllButtonClick } from '../../store/LevelCompleted/actionsLevelCompl';\r\nimport { beginAgainAllFlagsFinalLetterWordsNull } from '../../store/LevelCompleted/actionsFinalLetterWords';\r\nimport { beginAgainAllLevelsWordsNull } from '../../store/LevelCompleted/actionsLevelWordsFinal';\r\n\r\nfunction Header(props) {\r\n\r\n    const stateNavigationConsole = [\r\n        {\r\n            to: '/',\r\n            name: 'Home'\r\n        },\r\n        {\r\n            to: '/prizeShop',\r\n            name: 'Выбор награды'\r\n        },\r\n        {\r\n            to: '/progress',\r\n            name: 'Прогресс'\r\n        },\r\n    ]\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const navStyle = ['Navigation'];\r\n\r\n    if (!isOpen) {\r\n        navStyle.push('close');\r\n    };\r\n\r\n    const hendlerNavHide = () => {\r\n        setIsOpen(false);\r\n    }\r\n    const hendlerNavShow = () => {\r\n        setIsOpen(true);\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //набор картинок для призов\r\n    const stateImages = useSelector(state => state.stateImages);\r\n    const letterProgressPrizes = useSelector(state => state.stateLevelEnd); //прогресс букв и полученных призов\r\n\r\n    //переменные флагов карточек слогов\r\n    const stateLevelCompleted = useSelector(state => state.stateLevelCompleted);//флаги всех кнопок ButtonBlocks\r\n    const stateLevelFinal = useSelector(state => state.stateLevelFinal); //флаги пройденных блоков в уровне\r\n    const stateButtonBlockFinal = useSelector(state => state.stateButtonBlockFinal);//флаги уровней в букве\r\n    const stateFinalLetter = useSelector(state => state.stateFinalLetter); //флаг буква пройдена\r\n\r\n    //переменные флагов уровней слов\r\n    const stateLevelWordsFinal = useSelector(state => state.stateLevelWordsFinal); //флаги прохождения уровней в букве\r\n    const stateFinalLetterWords = useSelector(state => state.stateFinalLetterWords);// флаги прохождения буквы\r\n\r\n    const hendlerBeginAgainNullAllFlags = () => {\r\n        //сброс всех уровней. Все, кроме наград, возвращается к исходному состоянию\r\n\r\n       // СЛОГИ\r\n\r\n        //флаг прохождения букв\r\n        dispatch(beginAgainAllFlagsFinalLetterNull());\r\n\r\n        //уровни всех буквы меняем на false\r\n        dispatch(beginAgainAllFlagsAllLevelsNull());\r\n\r\n        // false флаги во всех блоках на всех уровнях\r\n        dispatch(beginAgainNullAllFlagsAllBlocksAllLetters());\r\n\r\n        //false все клики по кнопкам во всех карточках\r\n        dispatch(beginAgainNullAllFlagsAllButtonClick());\r\n\r\n        // СЛОВА\r\n\r\n        //флаг прохождения букв\r\n        dispatch(beginAgainAllFlagsFinalLetterWordsNull());\r\n\r\n        // флаги прохождения уровней буквы возвращаем на false\r\n        dispatch(beginAgainAllLevelsWordsNull());\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <nav\r\n                onMouseOver={hendlerNavShow}\r\n                onMouseOut={hendlerNavHide}\r\n                onClick={hendlerNavHide}\r\n                className={navStyle.join(' ')}\r\n            >\r\n                <NavigationConsole\r\n                    stateNavigationConsole={stateNavigationConsole}\r\n                    onclick={()=>console.log('click Header NavigationConsole')}\r\n                />\r\n                <Button\r\n                    classname='null-all-letters-begin-again'\r\n                    onclick={hendlerBeginAgainNullAllFlags}\r\n                    name=\"ВСЕ БУК-ВЫ СНА-ЧА-ЛА\"\r\n                />\r\n                \r\n            </nav>\r\n\r\n\r\n            {\r\n                isOpen ?\r\n                    <WindowBlind\r\n                        onclick={hendlerNavHide}\r\n                        classname='NavigationWindowBlind'\r\n                        letterProgressPrizes={letterProgressPrizes}\r\n                        stateImages={stateImages}\r\n                    />\r\n                    : null\r\n            }\r\n           \r\n\r\n        </header>\r\n    )\r\n}\r\nexport default connect()(Header)\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}