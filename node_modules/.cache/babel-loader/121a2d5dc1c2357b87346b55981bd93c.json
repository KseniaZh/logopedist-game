{"ast":null,"code":"import { BUTTON_LEVEL_COMPLETED, BUTTON_LEVEL_REPEAT, TAKE_PRIZE_ALL_LEVELS_NULL, BEGIN_AGAIN_ALL_LETTERS_LEVELS_NULL, LOAD_FROM_LOCAL_STORAGE_FINAL_LEVEL } from \"./types\";\nexport const changeFlagLevelCompleted = (stateLevelFinal, letter, numberLevelBlock) => {\n  //все блоки уровня/листа кликнуты, флаг true\n  let arr = { ...stateLevelFinal\n  };\n  arr[letter][numberLevelBlock] = true;\n  localStorage[`${JSON.parse(localStorage['player'])}_finalLevel`] = JSON.stringify(arr);\n  return {\n    type: BUTTON_LEVEL_COMPLETED,\n    payload: arr\n  };\n};\nexport const nullFlagLevelCompleted = (stateLevelFinal, letter, numberLevelBlock) => {\n  //все блоки уровня/листа кликнуты, но игрок хочет повторить, флаг снова меняем на false\n  let arr = { ...stateLevelFinal\n  };\n  arr[letter][numberLevelBlock] = false;\n  localStorage[`${JSON.parse(localStorage['player'])}_finalLevel`] = JSON.stringify(arr);\n  return {\n    type: BUTTON_LEVEL_REPEAT,\n    payload: arr\n  };\n};\nexport const takePrizeFlagsAllLevelsNull = (stateLevelFinal, letter) => {\n  //все уровни пройдены, буква закончена, игрок получил приз\n  //для возможности повторного прохождения все флаги возвращаем на false\n  let arr = { ...stateLevelFinal\n  };\n  arr[letter] = [false, false, false, false, false, false];\n  localStorage[`${JSON.parse(localStorage['player'])}_finalLevel`] = JSON.stringify(arr);\n  return {\n    type: TAKE_PRIZE_ALL_LEVELS_NULL,\n    payload: arr\n  };\n};\nexport const beginAgainAllFlagsAllLevelsNull = () => {\n  //сброс всех уровней\n  // все, кроме наград, возвращается к исходному состоянию\n  let arr = {\n    \"Б\": [false, false, false, false, false, false],\n    \"В\": [false, false, false, false, false, false],\n    \"Г\": [false, false, false, false, false, false],\n    \"Д\": [false, false, false, false, false, false],\n    \"Ж\": [false, false, false, false, false, false],\n    \"З\": [false, false, false, false, false, false],\n    \"К\": [false, false, false, false, false, false],\n    \"Л\": [false, false, false, false, false, false],\n    \"М\": [false, false, false, false, false, false],\n    \"Н\": [false, false, false, false, false, false],\n    \"П\": [false, false, false, false, false, false],\n    \"Р\": [false, false, false, false, false, false],\n    \"С\": [false, false, false, false, false, false],\n    \"Т\": [false, false, false, false, false, false],\n    \"Ф\": [false, false, false, false, false, false],\n    \"Ц\": [false, false, false, false, false, false],\n    \"Ч\": [false, false, false, false, false, false],\n    \"Ш\": [false, false, false, false, false, false],\n    \"Щ\": [false, false, false, false, false, false]\n  };\n  localStorage[`${JSON.parse(localStorage['player'])}_finalLevel`] = JSON.stringify(arr);\n  return {\n    type: BEGIN_AGAIN_ALL_LETTERS_LEVELS_NULL,\n    payload: arr\n  };\n};\nexport const loadLocalStorageFinalLevels = data => {\n  //при входе в игру загружаем из localStorage \n  return {\n    type: LOAD_FROM_LOCAL_STORAGE_FINAL_LEVEL,\n    payload: data\n  };\n};","map":{"version":3,"sources":["D:/Обучение/React/projects/logopedist-game/src/store/LevelCompleted/actionsLevelFinal.js"],"names":["BUTTON_LEVEL_COMPLETED","BUTTON_LEVEL_REPEAT","TAKE_PRIZE_ALL_LEVELS_NULL","BEGIN_AGAIN_ALL_LETTERS_LEVELS_NULL","LOAD_FROM_LOCAL_STORAGE_FINAL_LEVEL","changeFlagLevelCompleted","stateLevelFinal","letter","numberLevelBlock","arr","localStorage","JSON","parse","stringify","type","payload","nullFlagLevelCompleted","takePrizeFlagsAllLevelsNull","beginAgainAllFlagsAllLevelsNull","loadLocalStorageFinalLevels","data"],"mappings":"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","sourcesContent":["import {\r\n    BUTTON_LEVEL_COMPLETED,\r\n    BUTTON_LEVEL_REPEAT,\r\n    TAKE_PRIZE_ALL_LEVELS_NULL,\r\n    BEGIN_AGAIN_ALL_LETTERS_LEVELS_NULL,\r\n    LOAD_FROM_LOCAL_STORAGE_FINAL_LEVEL\r\n\r\n} from \"./types\";\r\n\r\nexport const changeFlagLevelCompleted = (stateLevelFinal, letter, numberLevelBlock) => {\r\n    //все блоки уровня/листа кликнуты, флаг true\r\n\r\n\r\n    let arr = { ...stateLevelFinal };\r\n\r\n    arr[letter][numberLevelBlock] = true;\r\n\r\n    localStorage[`${JSON.parse(localStorage['player'])}_finalLevel`] = JSON.stringify(arr);\r\n\r\n    return {\r\n        type: BUTTON_LEVEL_COMPLETED,\r\n        payload: arr\r\n    }\r\n}\r\n\r\n\r\nexport const nullFlagLevelCompleted = (stateLevelFinal, letter, numberLevelBlock) => {\r\n    //все блоки уровня/листа кликнуты, но игрок хочет повторить, флаг снова меняем на false\r\n\r\n\r\n    let arr = { ...stateLevelFinal };\r\n\r\n    arr[letter][numberLevelBlock] = false;\r\n\r\n    localStorage[`${JSON.parse(localStorage['player'])}_finalLevel`] = JSON.stringify(arr);\r\n\r\n    return {\r\n        type: BUTTON_LEVEL_REPEAT,\r\n        payload: arr\r\n    }\r\n}\r\n\r\nexport const takePrizeFlagsAllLevelsNull = (stateLevelFinal, letter) => {\r\n    //все уровни пройдены, буква закончена, игрок получил приз\r\n    //для возможности повторного прохождения все флаги возвращаем на false\r\n\r\n\r\n    let arr = { ...stateLevelFinal };\r\n\r\n    arr[letter] = [false, false, false, false, false, false];\r\n\r\n    localStorage[`${JSON.parse(localStorage['player'])}_finalLevel`] = JSON.stringify(arr);\r\n\r\n    return {\r\n        type: TAKE_PRIZE_ALL_LEVELS_NULL,\r\n        payload: arr\r\n    }\r\n}\r\n\r\nexport const beginAgainAllFlagsAllLevelsNull = () => {\r\n    //сброс всех уровней\r\n    // все, кроме наград, возвращается к исходному состоянию\r\n\r\n    let arr = {\r\n                    \"Б\": [false, false, false, false, false, false],\r\n                    \"В\": [false, false, false, false, false, false],\r\n                    \"Г\": [false, false, false, false, false, false],\r\n                    \"Д\": [false, false, false, false, false, false],\r\n                    \"Ж\": [false, false, false, false, false, false],\r\n                    \"З\": [false, false, false, false, false, false],\r\n                    \"К\": [false, false, false, false, false, false],\r\n                    \"Л\": [false, false, false, false, false, false],\r\n                    \"М\": [false, false, false, false, false, false],\r\n                    \"Н\": [false, false, false, false, false, false],\r\n                    \"П\": [false, false, false, false, false, false],\r\n                    \"Р\": [false, false, false, false, false, false],\r\n                    \"С\": [false, false, false, false, false, false],\r\n                    \"Т\": [false, false, false, false, false, false],\r\n                    \"Ф\": [false, false, false, false, false, false],\r\n                    \"Ц\": [false, false, false, false, false, false],\r\n                    \"Ч\": [false, false, false, false, false, false],\r\n                    \"Ш\": [false, false, false, false, false, false],\r\n                    \"Щ\": [false, false, false, false, false, false],\r\n                };\r\n\r\n    localStorage[`${JSON.parse(localStorage['player'])}_finalLevel`] = JSON.stringify(arr);\r\n\r\n    return {\r\n        type: BEGIN_AGAIN_ALL_LETTERS_LEVELS_NULL,\r\n        payload: arr\r\n    }\r\n}\r\n    export const loadLocalStorageFinalLevels = (data) => {\r\n        //при входе в игру загружаем из localStorage \r\n\r\n        return {\r\n            type: LOAD_FROM_LOCAL_STORAGE_FINAL_LEVEL,\r\n            payload: data\r\n        }\r\n    }"]},"metadata":{},"sourceType":"module"}