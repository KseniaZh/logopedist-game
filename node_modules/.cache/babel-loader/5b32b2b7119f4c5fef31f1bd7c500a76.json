{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\logopedist-game\\\\src\\\\components\\\\WordsAutomation\\\\LevelBlockWord.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect, useSelector } from \"react-redux\";\nimport Word from './Word';\n\nfunction LevelBlockWord(props) {\n  _s();\n\n  const letterSelect = useSelector(state => state.stateLetters.letterSelect);\n  const stateWords = useSelector(state => state.stateWords);\n  const [counter, setCounter] = useState(0);\n\n  const hendlerClickWord = numberWord => {\n    setCounter(numberWord + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: stateWords[letterSelect][props.numberWordBlock].map((arrWord, index) => {\n        if (index === counter) {\n          return /*#__PURE__*/_jsxDEV(Word, {\n            word: arrWord[counter],\n            number: counter + 1,\n            onclick: hendlerClickWord\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 36\n          }, this);\n        }\n\n        return null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LevelBlockWord, \"s9FyudGY79ovg0AFvqkQkooVNSA=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = LevelBlockWord;\nexport default connect()(LevelBlockWord);\n\nvar _c;\n\n$RefreshReg$(_c, \"LevelBlockWord\");","map":{"version":3,"sources":["D:/Обучение/React/projects/logopedist-game/src/components/WordsAutomation/LevelBlockWord.js"],"names":["React","useState","connect","useSelector","Word","LevelBlockWord","props","letterSelect","state","stateLetters","stateWords","counter","setCounter","hendlerClickWord","numberWord","numberWordBlock","map","arrWord","index"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AAEA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAE3B,QAAMC,YAAY,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,YAAN,CAAmBF,YAA7B,CAAhC;AACA,QAAMG,UAAU,GAAGP,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACE,UAAhB,CAA9B;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,CAAD,CAAtC;;AAEA,QAAMY,gBAAgB,GAAIC,UAAD,IAAgB;AACrCF,IAAAA,UAAU,CAACE,UAAU,GAAG,CAAd,CAAV;AACH,GAFD;;AAIA,sBAEI;AAAA,2BACI;AAAA,gBAEQJ,UAAU,CAACH,YAAD,CAAV,CAAyBD,KAAK,CAACS,eAA/B,EAAgDC,GAAhD,CAAoD,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACpE,YAAIA,KAAK,KAAKP,OAAd,EAAuB;AACnB,8BAAO,QAAC,IAAD;AAEK,YAAA,IAAI,EAAEM,OAAO,CAACN,OAAD,CAFlB;AAGK,YAAA,MAAM,EAAEA,OAAO,GAAG,CAHvB;AAIK,YAAA,OAAO,EAAEE;AAJd,aACUK,KADV;AAAA;AAAA;AAAA;AAAA,kBAAP;AAMH;;AACD,eAAO,IAAP;AAEH,OAXD;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAqBH;;GAhCQb,c;UAEgBF,W,EACFA,W;;;KAHdE,c;AAkCT,eAAeH,OAAO,GAAGG,cAAH,CAAtB","sourcesContent":["import React, { useState} from 'react';\r\nimport { connect, useSelector } from \"react-redux\";\r\n\r\nimport Word from './Word';\r\n\r\nfunction LevelBlockWord(props) {\r\n\r\n    const letterSelect = useSelector(state => state.stateLetters.letterSelect);\r\n    const stateWords = useSelector(state => state.stateWords);\r\n\r\n    const [counter, setCounter] = useState(0);\r\n\r\n    const hendlerClickWord = (numberWord) => {\r\n        setCounter(numberWord + 1);\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div>\r\n                {\r\n                    stateWords[letterSelect][props.numberWordBlock].map((arrWord, index) => {\r\n                        if (index === counter) {\r\n                            return <Word\r\n                                        key={index}\r\n                                        word={arrWord[counter]}\r\n                                        number={counter + 1}\r\n                                        onclick={hendlerClickWord}\r\n                                    />\r\n                        }\r\n                        return null\r\n\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n     )\r\n}\r\n\r\nexport default connect()(LevelBlockWord)\r\n"]},"metadata":{},"sourceType":"module"}