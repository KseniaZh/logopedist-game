{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\logopedist-game\\\\src\\\\containers\\\\Automation\\\\AutomationButtonsBlocks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport AutomationBlocks from \"../../components/Automation/AutomationBlocks\";\n\nfunction AutomationButtonsBlocks(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const letterSelect = useSelector(state => state.stateLetters.letterSelect);\n  const namesLevelBlock = ['LevelBlock_1', 'LevelBlock_2', 'LevelBlock_3', 'LevelBlock_4', 'LevelBlock_5', 'LevelBlock_6'];\n  const [numberLevelBlock, setNumberLevelBlock] = useState(0);\n\n  const hendlerLevelEnd = () => {};\n\n  const hendlerSelectLevelBlock = data => {\n    setNumberLevelBlock(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: letterSelect === 'X' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438 \\u0431\\u0443\\u043A\\u0432\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(AutomationBlocks, {\n      typeLetter: props.match.params.id,\n      letterSelect: letterSelect,\n      namesLevelBlock: namesLevelBlock,\n      onclick: hendlerSelectLevelBlock,\n      letterAutomation: letterSelect,\n      numberLevelBlock: numberLevelBlock\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 23\n    }, this)\n  }, void 0, false);\n}\n\n_s(AutomationButtonsBlocks, \"/+8rtG43G0b/0khLegZaApVSp5Q=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AutomationButtonsBlocks;\nexport default connect()(AutomationButtonsBlocks);\n\nvar _c;\n\n$RefreshReg$(_c, \"AutomationButtonsBlocks\");","map":{"version":3,"sources":["D:/Обучение/React/projects/logopedist-game/src/containers/Automation/AutomationButtonsBlocks.js"],"names":["React","useState","connect","useDispatch","useSelector","AutomationBlocks","AutomationButtonsBlocks","props","dispatch","letterSelect","state","stateLetters","namesLevelBlock","numberLevelBlock","setNumberLevelBlock","hendlerLevelEnd","hendlerSelectLevelBlock","data","match","params","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,aAAlD;AAEA,OAAOC,gBAAP,MAA6B,8CAA7B;;AAGA,SAASC,uBAAT,CAAiCC,KAAjC,EAAwC;AAAA;;AAEpC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAMM,YAAY,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,YAAN,CAAmBF,YAA7B,CAAhC;AAEA,QAAMG,eAAe,GAAG,CACpB,cADoB,EAEpB,cAFoB,EAGpB,cAHoB,EAIpB,cAJoB,EAKpB,cALoB,EAMpB,cANoB,CAAxB;AASA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0Cb,QAAQ,CAAC,CAAD,CAAxD;;AAEA,QAAMc,eAAe,GAAG,MAAM,CAE7B,CAFD;;AAGA,QAAMC,uBAAuB,GAAIC,IAAD,IAAU;AACtCH,IAAAA,mBAAmB,CAACG,IAAD,CAAnB;AACH,GAFD;;AAGA,sBACI;AAAA,cAEQR,YAAY,KAAK,GAAjB,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,gBAEM,QAAC,gBAAD;AACE,MAAA,UAAU,EAAEF,KAAK,CAACW,KAAN,CAAYC,MAAZ,CAAmBC,EADjC;AAEE,MAAA,YAAY,EAAEX,YAFhB;AAGE,MAAA,eAAe,EAAEG,eAHnB;AAIE,MAAA,OAAO,EAAEI,uBAJX;AAKE,MAAA,gBAAgB,EAAEP,YALpB;AAME,MAAA,gBAAgB,EAAEI;AANpB;AAAA;AAAA;AAAA;AAAA;AAJd,mBADJ;AAgBH;;GAvCQP,uB;UAEYH,W,EAEIC,W;;;KAJhBE,uB;AAyCT,eAAeJ,OAAO,GAAGI,uBAAH,CAAtB","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport AutomationBlocks from \"../../components/Automation/AutomationBlocks\";\r\n\r\n\r\nfunction AutomationButtonsBlocks(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const letterSelect = useSelector(state => state.stateLetters.letterSelect);\r\n\r\n    const namesLevelBlock = [\r\n        'LevelBlock_1',\r\n        'LevelBlock_2',\r\n        'LevelBlock_3',\r\n        'LevelBlock_4',\r\n        'LevelBlock_5',\r\n        'LevelBlock_6'\r\n    ];\r\n\r\n    const [numberLevelBlock, setNumberLevelBlock] = useState(0);\r\n\r\n    const hendlerLevelEnd = () => {\r\n\r\n    }\r\n    const hendlerSelectLevelBlock = (data) => {\r\n        setNumberLevelBlock(data);\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                letterSelect === 'X'?\r\n                    <div>Выбери букву</div>\r\n                    : <AutomationBlocks\r\n                        typeLetter={props.match.params.id}\r\n                        letterSelect={letterSelect}\r\n                        namesLevelBlock={namesLevelBlock}\r\n                        onclick={hendlerSelectLevelBlock}\r\n                        letterAutomation={letterSelect}\r\n                        numberLevelBlock={numberLevelBlock}\r\n                    />\r\n            }\r\n        </>   \r\n     )\r\n}\r\n\r\nexport default connect()(AutomationButtonsBlocks)\r\n"]},"metadata":{},"sourceType":"module"}