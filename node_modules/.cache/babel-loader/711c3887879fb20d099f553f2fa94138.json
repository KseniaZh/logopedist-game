{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\logopedist-game\\\\src\\\\components\\\\Automation\\\\LevelBlock.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport ButtonBlock from './ButtonBlock';\n\nfunction LevelBlock(props) {\n  _s();\n\n  const coin = useSelector(state => state.stateLevelCoins.letterBlocks[props.numberLevelBlock]);\n  const stateLetters = useSelector(state => state.stateLettersBlocks[props.numberLevelBlock]);\n  const letterSelect = useSelector(state => state.stateLetters.letterSelect);\n  console.log('рисуем ButtonBlock ', letterSelect);\n  const [levelСompleted, setLevelCompleted] = useState([false, false, false, false, false, false]);\n\n  const hendlerButtonBlock = (data, numberBlock) => {\n    console.log('back ', data);\n\n    if (data === true) {\n      let flagArr = [...levelСompleted];\n      flagArr[numberBlock] = true;\n      setLevelCompleted(flagArr);\n\n      if (flagArr.every(x => x === true) === true) {\n        console.log('level completed ', true);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ButtonBlock, {\n      namesLettersButtons: stateLetters[0],\n      classname: stateLetters[6],\n      hendlerButtonBlock: hendlerButtonBlock,\n      numberBlock: 0,\n      coin: coin,\n      letterSelect: letterSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ButtonBlock, {\n      namesLettersButtons: stateLetters[1],\n      classname: stateLetters[6],\n      hendlerButtonBlock: hendlerButtonBlock,\n      numberBlock: 1,\n      coin: coin,\n      letterSelect: letterSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ButtonBlock, {\n      namesLettersButtons: stateLetters[2],\n      classname: stateLetters[6],\n      hendlerButtonBlock: hendlerButtonBlock,\n      numberBlock: 2,\n      coin: coin,\n      letterSelect: letterSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ButtonBlock, {\n      namesLettersButtons: stateLetters[3],\n      classname: stateLetters[6],\n      hendlerButtonBlock: hendlerButtonBlock,\n      numberBlock: 3,\n      coin: coin,\n      letterSelect: letterSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ButtonBlock, {\n      namesLettersButtons: stateLetters[4],\n      classname: stateLetters[6],\n      hendlerButtonBlock: hendlerButtonBlock,\n      numberBlock: 4,\n      coin: coin,\n      letterSelect: letterSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ButtonBlock, {\n      namesLettersButtons: stateLetters[5],\n      classname: stateLetters[6],\n      hendlerButtonBlock: hendlerButtonBlock,\n      numberBlock: 5,\n      coin: coin,\n      letterSelect: letterSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 13\n  }, this);\n}\n\n_s(LevelBlock, \"B8htb2uOFMG6yOQGS8kpA0YJXM8=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = LevelBlock;\nexport default connect()(LevelBlock);\n\nvar _c;\n\n$RefreshReg$(_c, \"LevelBlock\");","map":{"version":3,"sources":["D:/Обучение/React/projects/logopedist-game/src/components/Automation/LevelBlock.js"],"names":["React","useState","connect","useDispatch","useSelector","ButtonBlock","LevelBlock","props","coin","state","stateLevelCoins","letterBlocks","numberLevelBlock","stateLetters","stateLettersBlocks","letterSelect","console","log","levelСompleted","setLevelCompleted","hendlerButtonBlock","data","numberBlock","flagArr","every","x"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport ButtonBlock from './ButtonBlock';\r\n\r\nfunction LevelBlock(props) {\r\n\r\n \r\n    const coin = useSelector(state => state.stateLevelCoins.letterBlocks[props.numberLevelBlock]);\r\n    const stateLetters = useSelector(state => state.stateLettersBlocks[props.numberLevelBlock]);\r\n    const letterSelect = useSelector(state => state.stateLetters.letterSelect);\r\n    \r\n    console.log('рисуем ButtonBlock ', letterSelect);\r\n\r\n    const [levelСompleted, setLevelCompleted] = useState([false, false, false, false, false, false])\r\n\r\n    const hendlerButtonBlock = (data, numberBlock) => {\r\n        console.log('back ', data) \r\n        if (data === true) {\r\n            let flagArr = [...levelСompleted];\r\n            flagArr[numberBlock] = true;\r\n            setLevelCompleted(flagArr);\r\n            \r\n            if (flagArr.every(x => x === true) === true) {\r\n                console.log('level completed ', true);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n            <div>\r\n                <ButtonBlock\r\n                    namesLettersButtons={stateLetters[0]}\r\n                    classname={stateLetters[6]}\r\n                    hendlerButtonBlock={hendlerButtonBlock}\r\n                    numberBlock={0}\r\n                    coin={coin}\r\n                    letterSelect={letterSelect}\r\n                />\r\n                <ButtonBlock\r\n                    namesLettersButtons={stateLetters[1]}\r\n                    classname={stateLetters[6]}\r\n                    hendlerButtonBlock={hendlerButtonBlock}\r\n                    numberBlock={1}\r\n                coin={coin}\r\n                letterSelect={letterSelect}\r\n                />\r\n                <ButtonBlock\r\n                    namesLettersButtons={stateLetters[2]}\r\n                    classname={stateLetters[6]}\r\n                    hendlerButtonBlock={hendlerButtonBlock}\r\n                    numberBlock={2}\r\n                coin={coin}\r\n                letterSelect={letterSelect}\r\n                />\r\n                <ButtonBlock\r\n                    namesLettersButtons={stateLetters[3]}\r\n                    classname={stateLetters[6]}\r\n                    hendlerButtonBlock={hendlerButtonBlock}\r\n                    numberBlock={3}\r\n                coin={coin}\r\n                letterSelect={letterSelect}\r\n                />\r\n                <ButtonBlock\r\n                    namesLettersButtons={stateLetters[4]}\r\n                    classname={stateLetters[6]}\r\n                    hendlerButtonBlock={hendlerButtonBlock}\r\n                    numberBlock={4}\r\n                coin={coin}\r\n                letterSelect={letterSelect}\r\n                />\r\n                <ButtonBlock\r\n                    namesLettersButtons={stateLetters[5]}\r\n                    classname={stateLetters[6]}\r\n                    hendlerButtonBlock={hendlerButtonBlock}\r\n                    numberBlock={5}\r\n                coin={coin}\r\n                letterSelect={letterSelect}\r\n                />\r\n\r\n            </div>\r\n        \r\n     )\r\n}\r\n\r\nexport default connect()(LevelBlock)\r\n"]},"metadata":{},"sourceType":"module"}