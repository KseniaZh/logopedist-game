{"ast":null,"code":"import { FLAG_FINAL_LETTER, TAKE_PRIZE_FLAG_NULL, BEGIN_AGAIN_ALL_LETTERS, LOAD_FROM_LOCAL_STORAGE_FINAL_LETTER } from \"./types\";\nexport const finalLetter = (stateFinalLetter, letter) => {\n  //все уровни пройдены, флаг true\n  let obj = { ...stateFinalLetter\n  };\n  obj[letter] = true;\n  localStorage[`${JSON.parse(localStorage['player'])}__finalLetter`] = JSON.stringify(obj);\n  return {\n    type: FLAG_FINAL_LETTER,\n    payload: obj\n  };\n};\nexport const takePrizeFlagFinalLetterNull = (stateFinalLetter, letter) => {\n  //все уровни пройдены, флаг был true, игрок переходит в магазин для выбора приза, \n  //после чего все достижения по букве обнуляются для возможности повторног прохождения\n  // флаг снова меняем на false\n  let obj = { ...stateFinalLetter\n  };\n  obj[letter] = false;\n  localStorage[`${JSON.parse(localStorage['player'])}__finalLetter`] = JSON.stringify(obj);\n  return {\n    type: TAKE_PRIZE_FLAG_NULL,\n    payload: obj\n  };\n};\nexport const beginAgainAllFlagsFinalLetterNull = () => {\n  //сброс всех уровней\n  // все, кроме наград, возвращается к исходному состоянию\n  let obj = {\n    \"Б\": false,\n    \"В\": false,\n    \"Г\": false,\n    \"Д\": false,\n    \"Ж\": false,\n    \"З\": false,\n    \"К\": false,\n    \"Л\": false,\n    \"М\": false,\n    \"Н\": false,\n    \"П\": false,\n    \"Р\": false,\n    \"С\": false,\n    \"Т\": false,\n    \"Ф\": false,\n    \"Ц\": false,\n    \"Ч\": false,\n    \"Ш\": false,\n    \"Щ\": false\n  };\n  localStorage[`${JSON.parse(localStorage['player'])}__finalLetter`] = JSON.stringify(obj);\n  return {\n    type: BEGIN_AGAIN_ALL_LETTERS,\n    payload: obj\n  };\n};\nexport const loadLocalStorageFinalLetter = data => {\n  //при входе в игру загружаем из localStorage \n  return {\n    type: LOAD_FROM_LOCAL_STORAGE_FINAL_LETTER,\n    payload: data\n  };\n};","map":{"version":3,"sources":["D:/Обучение/React/projects/logopedist-game/src/store/LevelCompleted/actionsFinalLetter.js"],"names":["FLAG_FINAL_LETTER","TAKE_PRIZE_FLAG_NULL","BEGIN_AGAIN_ALL_LETTERS","LOAD_FROM_LOCAL_STORAGE_FINAL_LETTER","finalLetter","stateFinalLetter","letter","obj","localStorage","JSON","parse","stringify","type","payload","takePrizeFlagFinalLetterNull","beginAgainAllFlagsFinalLetterNull","loadLocalStorageFinalLetter","data"],"mappings":"AAAA,SACIA,iBADJ,EAEIC,oBAFJ,EAGIC,uBAHJ,EAIIC,oCAJJ,QAMO,SANP;AAQA,OAAO,MAAMC,WAAW,GAAG,CAACC,gBAAD,EAAmBC,MAAnB,KAA8B;AACrD;AAEA,MAAIC,GAAG,GAAG,EAAE,GAAGF;AAAL,GAAV;AAEAE,EAAAA,GAAG,CAACD,MAAD,CAAH,GAAc,IAAd;AAEAE,EAAAA,YAAY,CAAE,GAAEC,IAAI,CAACC,KAAL,CAAWF,YAAY,CAAC,QAAD,CAAvB,CAAmC,eAAvC,CAAZ,GAAqEC,IAAI,CAACE,SAAL,CAAeJ,GAAf,CAArE;AAEA,SAAO;AACHK,IAAAA,IAAI,EAAEZ,iBADH;AAEHa,IAAAA,OAAO,EAAEN;AAFN,GAAP;AAIH,CAbM;AAcP,OAAO,MAAMO,4BAA4B,GAAG,CAACT,gBAAD,EAAmBC,MAAnB,KAA8B;AACtE;AACA;AACA;AAEA,MAAIC,GAAG,GAAG,EAAE,GAAGF;AAAL,GAAV;AAEAE,EAAAA,GAAG,CAACD,MAAD,CAAH,GAAc,KAAd;AAEAE,EAAAA,YAAY,CAAE,GAAEC,IAAI,CAACC,KAAL,CAAWF,YAAY,CAAC,QAAD,CAAvB,CAAmC,eAAvC,CAAZ,GAAqEC,IAAI,CAACE,SAAL,CAAeJ,GAAf,CAArE;AAEA,SAAO;AACHK,IAAAA,IAAI,EAAEX,oBADH;AAEHY,IAAAA,OAAO,EAAEN;AAFN,GAAP;AAIH,CAfM;AAiBP,OAAO,MAAMQ,iCAAiC,GAAG,MAAM;AACnD;AACA;AAEA,MAAIR,GAAG,GAAG;AACN,SAAK,KADC;AAEN,SAAK,KAFC;AAGN,SAAK,KAHC;AAIN,SAAK,KAJC;AAKN,SAAK,KALC;AAMN,SAAK,KANC;AAON,SAAK,KAPC;AAQN,SAAK,KARC;AASN,SAAK,KATC;AAUN,SAAK,KAVC;AAWN,SAAK,KAXC;AAYN,SAAK,KAZC;AAaN,SAAK,KAbC;AAcN,SAAK,KAdC;AAeN,SAAK,KAfC;AAgBN,SAAK,KAhBC;AAiBN,SAAK,KAjBC;AAkBN,SAAK,KAlBC;AAmBN,SAAK;AAnBC,GAAV;AAsBAC,EAAAA,YAAY,CAAE,GAAEC,IAAI,CAACC,KAAL,CAAWF,YAAY,CAAC,QAAD,CAAvB,CAAmC,eAAvC,CAAZ,GAAqEC,IAAI,CAACE,SAAL,CAAeJ,GAAf,CAArE;AAEA,SAAO;AACHK,IAAAA,IAAI,EAAEV,uBADH;AAEHW,IAAAA,OAAO,EAAEN;AAFN,GAAP;AAIH,CAhCM;AAkCP,OAAO,MAAMS,2BAA2B,GAAIC,IAAD,IAAU;AACnD;AAEE,SAAO;AACHL,IAAAA,IAAI,EAAET,oCADH;AAEHU,IAAAA,OAAO,EAAEI;AAFN,GAAP;AAIH,CAPM","sourcesContent":["import {\r\n    FLAG_FINAL_LETTER,\r\n    TAKE_PRIZE_FLAG_NULL,\r\n    BEGIN_AGAIN_ALL_LETTERS,\r\n    LOAD_FROM_LOCAL_STORAGE_FINAL_LETTER\r\n\r\n} from \"./types\";\r\n\r\nexport const finalLetter = (stateFinalLetter, letter) => {\r\n    //все уровни пройдены, флаг true\r\n\r\n    let obj = { ...stateFinalLetter };\r\n\r\n    obj[letter] = true;\r\n\r\n    localStorage[`${JSON.parse(localStorage['player'])}__finalLetter`] = JSON.stringify(obj);\r\n\r\n    return {\r\n        type: FLAG_FINAL_LETTER,\r\n        payload: obj\r\n    }\r\n}\r\nexport const takePrizeFlagFinalLetterNull = (stateFinalLetter, letter) => {\r\n    //все уровни пройдены, флаг был true, игрок переходит в магазин для выбора приза, \r\n    //после чего все достижения по букве обнуляются для возможности повторног прохождения\r\n    // флаг снова меняем на false\r\n\r\n    let obj = { ...stateFinalLetter };\r\n\r\n    obj[letter] = false;\r\n\r\n    localStorage[`${JSON.parse(localStorage['player'])}__finalLetter`] = JSON.stringify(obj);\r\n\r\n    return {\r\n        type: TAKE_PRIZE_FLAG_NULL,\r\n        payload: obj\r\n    }\r\n}\r\n\r\nexport const beginAgainAllFlagsFinalLetterNull = () => {\r\n    //сброс всех уровней\r\n    // все, кроме наград, возвращается к исходному состоянию\r\n\r\n    let obj = {\r\n        \"Б\": false,\r\n        \"В\": false,\r\n        \"Г\": false,\r\n        \"Д\": false,\r\n        \"Ж\": false,\r\n        \"З\": false,\r\n        \"К\": false,\r\n        \"Л\": false,\r\n        \"М\": false,\r\n        \"Н\": false,\r\n        \"П\": false,\r\n        \"Р\": false,\r\n        \"С\": false,\r\n        \"Т\": false,\r\n        \"Ф\": false,\r\n        \"Ц\": false,\r\n        \"Ч\": false,\r\n        \"Ш\": false,\r\n        \"Щ\": false,\r\n    };\r\n\r\n    localStorage[`${JSON.parse(localStorage['player'])}__finalLetter`] = JSON.stringify(obj);\r\n\r\n    return {\r\n        type: BEGIN_AGAIN_ALL_LETTERS,\r\n        payload: obj\r\n    }\r\n}\r\n\r\nexport const loadLocalStorageFinalLetter = (data) => {\r\n  //при входе в игру загружаем из localStorage \r\n\r\n    return {\r\n        type: LOAD_FROM_LOCAL_STORAGE_FINAL_LETTER,\r\n        payload: data\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}