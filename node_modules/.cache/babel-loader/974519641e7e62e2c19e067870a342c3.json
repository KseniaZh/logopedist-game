{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\logopedist-game\\\\src\\\\components\\\\Automation\\\\ButtonBlock.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ButtonAutomationBlock from '../../UserInterface/Buttons/ButtonAutomationBlock';\nimport CoinFinalLevelBlock from '../../UserInterface/Coins/CoinFinalLevelBlock';\n\nfunction ButtonBlock(props) {\n  _s();\n\n  const [classnameSpan, setClassnameSpan] = useState({\n    'button_1': ['heart'],\n    'button_2': ['heart'],\n    'button_3': ['heart']\n  });\n  const [flagCoinFinal, setFlagCoinFinal] = useState(false);\n\n  const hendlerButtonClick = (numberButton, numberButtonBlock) => {\n    let newClass = { ...classnameSpan,\n      [numberButton]: ['heart', 'clicked']\n    };\n    setClassnameSpan(newClass);\n    props.onclick(numberButton, numberButtonBlock); //newClass = Object.values(newClass); //определяем, все ли 3 кнопки кликнуты\n    ////для этого собираем все значения в массив массивов и проверяем, у всех ли есть слик\n    //if (newClass.every(x => x[1] === 'clicked') === true) {\n    //  //  props.hendlerButtonBlock(newClass.every(x => x[1] === 'clicked'), props.numberBlock); // если все 3 кликнуты, выдаст true\n    //// возвращаем значение наверх для подсчета прохождения уровня\n    //    setFlagCoinFinal(true);\n    //}\n  };\n\n  const funcCNSpan = numberButton => {\n    const arrClassName = ['heart'];\n\n    if (props.buttonBlockFlags[numberButton] === true) {\n      arrClassName.push('clicked');\n    }\n\n    return arrClassName.join(' ');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"button-block\",\n    children: [/*#__PURE__*/_jsxDEV(ButtonAutomationBlock, {\n      classname: props.classname,\n      onclick: hendlerButtonClick,\n      names: props.namesLettersButtons.namesLettersButton_1,\n      number: \"button_1\",\n      numberBlock: props.numberBlock\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: funcCNSpan('button_1'),\n      children: \"\\uD83E\\uDC9A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ButtonAutomationBlock, {\n      classname: props.classname,\n      onclick: hendlerButtonClick,\n      names: props.namesLettersButtons.namesLettersButton_2,\n      number: \"button_2\",\n      numberBlock: props.numberBlock\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: funcCNSpan('button_2'),\n      children: \"\\uD83E\\uDC9A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ButtonAutomationBlock, {\n      classname: props.classname,\n      onclick: hendlerButtonClick,\n      names: props.namesLettersButtons.namesLettersButton_3,\n      number: \"button_3\",\n      numberBlock: props.numberBlock\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: funcCNSpan('button_3'),\n      children: \"\\uD83E\\uDC9A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), buttonBlockCompleted ? /*#__PURE__*/_jsxDEV(CoinFinalLevelBlock, {\n      classname: \"coin-final-block-wrapper\",\n      classnameFinalCoin: \"coin-final-block\",\n      coin: props.coin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coin-final-block-wrapper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ButtonBlock, \"WhdoFY6UsauDK6FfdmRGaz2VW2M=\");\n\n_c = ButtonBlock;\nexport default ButtonBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonBlock\");","map":{"version":3,"sources":["D:/Обучение/React/projects/logopedist-game/src/components/Automation/ButtonBlock.js"],"names":["React","useState","ButtonAutomationBlock","CoinFinalLevelBlock","ButtonBlock","props","classnameSpan","setClassnameSpan","flagCoinFinal","setFlagCoinFinal","hendlerButtonClick","numberButton","numberButtonBlock","newClass","onclick","funcCNSpan","arrClassName","buttonBlockFlags","push","join","classname","namesLettersButtons","namesLettersButton_1","numberBlock","namesLettersButton_2","namesLettersButton_3","buttonBlockCompleted","coin"],"mappings":"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","sourcesContent":["import React, {useState } from 'react';\r\n\r\nimport ButtonAutomationBlock from '../../UserInterface/Buttons/ButtonAutomationBlock';\r\nimport CoinFinalLevelBlock from '../../UserInterface/Coins/CoinFinalLevelBlock';\r\n\r\nfunction ButtonBlock(props) {\r\n\r\n    const [classnameSpan, setClassnameSpan] = useState({\r\n        'button_1': ['heart'],\r\n        'button_2': ['heart'],\r\n        'button_3': ['heart'],\r\n    })\r\n    const [flagCoinFinal, setFlagCoinFinal] = useState(false);\r\n\r\n    const hendlerButtonClick = (numberButton, numberButtonBlock) => {\r\n        let newClass = {\r\n            ...classnameSpan,\r\n            [numberButton]: ['heart', 'clicked'],\r\n        }\r\n        setClassnameSpan(newClass);\r\n\r\n        props.onclick(numberButton, numberButtonBlock);\r\n\r\n        //newClass = Object.values(newClass); //определяем, все ли 3 кнопки кликнуты\r\n        ////для этого собираем все значения в массив массивов и проверяем, у всех ли есть слик\r\n\r\n        //if (newClass.every(x => x[1] === 'clicked') === true) {\r\n        //  //  props.hendlerButtonBlock(newClass.every(x => x[1] === 'clicked'), props.numberBlock); // если все 3 кликнуты, выдаст true\r\n        //// возвращаем значение наверх для подсчета прохождения уровня\r\n        //    setFlagCoinFinal(true);\r\n        //}\r\n    }\r\n\r\n    const funcCNSpan = (numberButton) => {\r\n        const arrClassName = ['heart'];\r\n        if (props.buttonBlockFlags[numberButton] === true) {\r\n            arrClassName.push('clicked');\r\n        }\r\n        return arrClassName.join(' ')\r\n    }\r\n\r\n    return (\r\n        <div className=\"button-block\">\r\n\r\n            <ButtonAutomationBlock\r\n                    classname={props.classname}\r\n                    onclick={hendlerButtonClick}\r\n                    names={props.namesLettersButtons.namesLettersButton_1}\r\n                    number='button_1'\r\n                    numberBlock={props.numberBlock}\r\n            />\r\n\r\n            <span\r\n                className={ funcCNSpan('button_1') }\r\n            >\t\r\n                🢚\r\n            </span>\r\n\r\n            <ButtonAutomationBlock\r\n                    classname={props.classname}\r\n                    onclick={hendlerButtonClick}\r\n                    names={props.namesLettersButtons.namesLettersButton_2}\r\n                    number='button_2'\r\n                    numberBlock={props.numberBlock}\r\n            />\r\n\r\n            <span\r\n                className={ funcCNSpan('button_2')}\r\n            >\t\r\n                🢚\r\n            </span>\r\n\r\n            <ButtonAutomationBlock\r\n                    classname={props.classname}\r\n                    onclick={hendlerButtonClick}\r\n                    names={props.namesLettersButtons.namesLettersButton_3}\r\n                    number='button_3'\r\n                    numberBlock={props.numberBlock}\r\n            />\r\n\r\n            <span\r\n                className={ funcCNSpan('button_3')}\r\n            >\r\n                🢚\r\n            </span>\r\n\r\n            {\r\n                buttonBlockCompleted ?\r\n                     <CoinFinalLevelBlock\r\n                        classname='coin-final-block-wrapper'\r\n                        classnameFinalCoin='coin-final-block'\r\n                        coin={props.coin}\r\n                    />\r\n                    : <div className='coin-final-block-wrapper'></div>\r\n            }\r\n            \r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ButtonBlock\r\n"]},"metadata":{},"sourceType":"module"}