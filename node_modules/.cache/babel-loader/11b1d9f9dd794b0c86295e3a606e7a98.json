{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\logopedist-game\\\\src\\\\components\\\\Header\\\\WindowBlind.js\";\nimport React from 'react';\n\nconst WindowBlind = props => {\n  const arrLetter = Object.keys(props.letterProgressPrizes); //массив букв\n\n  const arrFlags = Object.values(props.letterProgressPrizes); //массив массивов [false, [\"unicorns\", 0]]\n\n  const stateImages = props.stateImages; //С: [false, [\"unicorns\", 0]]\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.classname,\n    onClick: props.onclick,\n    children: arrFlags.map((flag, index) => {\n      if (flag[0] === true) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"letters-Window-Blind\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [arrLetter[index], \" : \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }, this), flag.map((val, index) => {\n            if (index > 0) {\n              let prize = stateImages[val[0]][val[1]];\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"priz-progress\",\n                style: {\n                  backgroundImage: `url(${prize})`\n                }\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 48\n              }, this);\n            } else {\n              return null;\n            }\n          })]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 32\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_c = WindowBlind;\nexport default WindowBlind;\n\nvar _c;\n\n$RefreshReg$(_c, \"WindowBlind\");","map":{"version":3,"sources":["D:/Обучение/React/projects/logopedist-game/src/components/Header/WindowBlind.js"],"names":["React","WindowBlind","props","arrLetter","Object","keys","letterProgressPrizes","arrFlags","values","stateImages","classname","onclick","map","flag","index","val","prize","backgroundImage"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAEzB,QAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,oBAAlB,CAAlB,CAFyB,CAEkC;;AAC3D,QAAMC,QAAQ,GAAGH,MAAM,CAACI,MAAP,CAAcN,KAAK,CAACI,oBAApB,CAAjB,CAHyB,CAGmC;;AAC5D,QAAMG,WAAW,GAAGP,KAAK,CAACO,WAA1B,CAJyB,CAMzB;;AAEA,sBACI;AACI,IAAA,SAAS,EAAEP,KAAK,CAACQ,SADrB;AAEI,IAAA,OAAO,EAAER,KAAK,CAACS,OAFnB;AAAA,cAKQJ,QAAQ,CAACK,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1B,UAAID,IAAI,CAAC,CAAD,CAAJ,KAAY,IAAhB,EAAsB;AAClB,4BAAO;AAEH,UAAA,SAAS,EAAC,sBAFP;AAAA,kCAKH;AAAA,uBAAMV,SAAS,CAACW,KAAD,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA,kBALG,EAOCD,IAAI,CAACD,GAAL,CAAS,CAACG,GAAD,EAAMD,KAAN,KAAgB;AACrB,gBAAIA,KAAK,GAAG,CAAZ,EAAe;AACX,kBAAIE,KAAK,GAAGP,WAAW,CAACM,GAAG,CAAC,CAAD,CAAJ,CAAX,CAAoBA,GAAG,CAAC,CAAD,CAAvB,CAAZ;AAEA,kCAAO;AACK,gBAAA,SAAS,EAAC,eADf;AAEK,gBAAA,KAAK,EAAE;AACHE,kBAAAA,eAAe,EAAG,OAAMD,KAAM;AAD3B;AAFZ,iBAKUF,KALV;AAAA;AAAA;AAAA;AAAA,sBAAP;AAQH,aAXD,MAWO;AACH,qBAAO,IAAP;AACH;AAEJ,WAhBD,CAPD;AAAA,WACEA,KADF;AAAA;AAAA;AAAA;AAAA,gBAAP;AA4BH;AACJ,KA/BD;AALR;AAAA;AAAA;AAAA;AAAA,UADJ;AAyCH,CAjDD;;KAAMb,W;AAmDN,eAAeA,WAAf","sourcesContent":["import React from 'react';\r\n\r\nconst WindowBlind = props => {\r\n\r\n    const arrLetter = Object.keys(props.letterProgressPrizes); //массив букв\r\n    const arrFlags = Object.values(props.letterProgressPrizes); //массив массивов [false, [\"unicorns\", 0]]\r\n    const stateImages = props.stateImages;\r\n\r\n    //С: [false, [\"unicorns\", 0]]\r\n\r\n    return (\r\n        <div\r\n            className={props.classname}\r\n            onClick={props.onclick}\r\n        >\r\n            {\r\n                arrFlags.map((flag, index) => {\r\n                    if (flag[0] === true) {\r\n                        return <div\r\n                            key={index}\r\n                            className='letters-Window-Blind'\r\n                            \r\n                        >\r\n                            <div>{arrLetter[index]} : </div>\r\n                            {\r\n                                flag.map((val, index) => {\r\n                                    if (index > 0) {\r\n                                        let prize = stateImages[val[0]][val[1]];\r\n                                     \r\n                                        return <div\r\n                                                    className='priz-progress'\r\n                                                    style={{\r\n                                                        backgroundImage: `url(${prize})`\r\n                                                    }}\r\n                                                    key={index}\r\n                                                >\r\n                                                </div>\r\n                                    } else {\r\n                                        return null\r\n                                    }\r\n\r\n                                })\r\n\r\n                            }\r\n                            \r\n                        </div>\r\n                    }\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WindowBlind\r\n\r\n"]},"metadata":{},"sourceType":"module"}