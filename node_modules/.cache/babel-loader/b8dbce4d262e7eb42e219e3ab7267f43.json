{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\logopedist-game\\\\src\\\\components\\\\Automation\\\\LevelBlock.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport ButtonBlock from './ButtonBlock';\n\nfunction LevelBlock(props) {\n  _s();\n\n  const coin = useSelector(state => state.stateLevelCoins.letterBlocks[props.numberLevelBlock]);\n  const stateLettersRedux = useSelector(state => state.stateLettersBlocks[props.numberLevelBlock]);\n  const letterSelect = useSelector(state => state.stateLetters.letterSelect);\n  console.log('рисуем ButtonBlock ', letterSelect);\n  let state = stateLettersRedux; // меняем переменную 'X' в state на переданную через props.letterAutomation букву\n\n  for (let i = 0; i < state.length; i++) {\n    let arr = Object.values(state[i]);\n\n    for (let obj of arr) {\n      let keys = Object.keys(obj);\n\n      for (let key of keys) {\n        if (obj[key] === 'X') {\n          obj[key] = letterSelect;\n        }\n\n        ;\n      }\n\n      ;\n    }\n\n    ;\n  }\n\n  ;\n  const [stateLetters, setStateLetters] = useState(state);\n  const [letter, setLetter] = useState(0);\n  const [levelСompleted, setLevelCompleted] = useState([false, false, false, false, false, false]);\n\n  const hendlerButtonBlock = (data, numberBlock) => {\n    console.log('back ', data);\n\n    if (data === true) {\n      let flagArr = [...levelСompleted];\n      flagArr[numberBlock] = true;\n      setLevelCompleted(flagArr);\n\n      if (flagArr.every(x => x === true) === true) {\n        console.log('level completed ', true);\n      }\n    }\n  };\n\n  useEffect(() => {\n    let state = stateLettersRedux; // меняем переменную 'X' в state на переданную через props.letterAutomation букву\n\n    for (let i = 0; i < state.length; i++) {\n      let arr = Object.values(state[i]);\n\n      for (let obj of arr) {\n        let keys = Object.keys(obj);\n\n        for (let key of keys) {\n          if (obj[key] === 'X') {\n            obj[key] = letterSelect;\n          }\n\n          ;\n        }\n\n        ;\n      }\n\n      ;\n    }\n\n    ;\n    setStateLetters(state);\n  }, [props.letterAutomation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ButtonBlock, {\n      namesLettersButtons: stateLetters[0],\n      classname: stateLetters[6],\n      hendlerButtonBlock: hendlerButtonBlock,\n      numberBlock: 0,\n      coin: coin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ButtonBlock, {\n      namesLettersButtons: stateLetters[1],\n      classname: stateLetters[6],\n      hendlerButtonBlock: hendlerButtonBlock,\n      numberBlock: 1,\n      coin: coin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ButtonBlock, {\n      namesLettersButtons: stateLetters[2],\n      classname: stateLetters[6],\n      hendlerButtonBlock: hendlerButtonBlock,\n      numberBlock: 2,\n      coin: coin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ButtonBlock, {\n      namesLettersButtons: stateLetters[3],\n      classname: stateLetters[6],\n      hendlerButtonBlock: hendlerButtonBlock,\n      numberBlock: 3,\n      coin: coin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ButtonBlock, {\n      namesLettersButtons: stateLetters[4],\n      classname: stateLetters[6],\n      hendlerButtonBlock: hendlerButtonBlock,\n      numberBlock: 4,\n      coin: coin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ButtonBlock, {\n      namesLettersButtons: stateLetters[5],\n      classname: stateLetters[6],\n      hendlerButtonBlock: hendlerButtonBlock,\n      numberBlock: 5,\n      coin: coin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 13\n  }, this);\n}\n\n_s(LevelBlock, \"uHjTN8YQ/xyh1JWCN1SY5ISu30E=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = LevelBlock;\nexport default connect()(LevelBlock);\n\nvar _c;\n\n$RefreshReg$(_c, \"LevelBlock\");","map":{"version":3,"sources":["D:/Обучение/React/projects/logopedist-game/src/components/Automation/LevelBlock.js"],"names":["React","useEffect","useState","connect","useDispatch","useSelector","ButtonBlock","LevelBlock","props","coin","state","stateLevelCoins","letterBlocks","numberLevelBlock","stateLettersRedux","stateLettersBlocks","letterSelect","stateLetters","console","log","i","length","arr","Object","values","obj","keys","key","setStateLetters","letter","setLetter","levelСompleted","setLevelCompleted","hendlerButtonBlock","data","numberBlock","flagArr","every","x","letterAutomation"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport ButtonBlock from './ButtonBlock';\r\n\r\nfunction LevelBlock(props) {\r\n\r\n \r\n    const coin = useSelector(state => state.stateLevelCoins.letterBlocks[props.numberLevelBlock]);\r\n    const stateLettersRedux = useSelector(state => state.stateLettersBlocks[props.numberLevelBlock]);\r\n    const letterSelect = useSelector(state => state.stateLetters.letterSelect);\r\n\r\n    console.log('рисуем ButtonBlock ', letterSelect)\r\n\r\n    let state = stateLettersRedux;\r\n    // меняем переменную 'X' в state на переданную через props.letterAutomation букву\r\n    for (let i = 0; i < state.length; i++) {\r\n\r\n        let arr = Object.values(state[i]);\r\n\r\n        for (let obj of arr) {\r\n\r\n            let keys = Object.keys(obj);\r\n\r\n            for (let key of keys) {\r\n                if (obj[key] === 'X') {\r\n                    obj[key] = letterSelect;\r\n                };\r\n            };\r\n        };\r\n    };\r\n\r\n    const [stateLetters, setStateLetters] = useState(state);\r\n\r\n    const [letter, setLetter] = useState(0);\r\n\r\n    const [levelСompleted, setLevelCompleted] = useState([false, false, false, false, false, false])\r\n\r\n    const hendlerButtonBlock = (data, numberBlock) => {\r\n        console.log('back ', data) \r\n        if (data === true) {\r\n            let flagArr = [...levelСompleted];\r\n            flagArr[numberBlock] = true;\r\n            setLevelCompleted(flagArr);\r\n            \r\n            if (flagArr.every(x => x === true) === true) {\r\n                console.log('level completed ', true);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let state = stateLettersRedux;\r\n        // меняем переменную 'X' в state на переданную через props.letterAutomation букву\r\n        for (let i = 0; i < state.length; i++) {\r\n\r\n            let arr = Object.values(state[i]);\r\n\r\n            for (let obj of arr) {\r\n\r\n                let keys = Object.keys(obj);\r\n\r\n                for (let key of keys) {\r\n                    if (obj[key] === 'X') {\r\n                        obj[key] = letterSelect;\r\n                    };\r\n                };\r\n            };\r\n        };\r\n        setStateLetters(state);\r\n    }, [props.letterAutomation]);\r\n\r\n    return (\r\n\r\n            <div>\r\n                <ButtonBlock\r\n                    namesLettersButtons={stateLetters[0]}\r\n                    classname={stateLetters[6]}\r\n                    hendlerButtonBlock={hendlerButtonBlock}\r\n                    numberBlock={0}\r\n                    coin={coin}\r\n                />\r\n                <ButtonBlock\r\n                    namesLettersButtons={stateLetters[1]}\r\n                    classname={stateLetters[6]}\r\n                    hendlerButtonBlock={hendlerButtonBlock}\r\n                    numberBlock={1}\r\n                    coin={coin}\r\n                />\r\n                <ButtonBlock\r\n                    namesLettersButtons={stateLetters[2]}\r\n                    classname={stateLetters[6]}\r\n                    hendlerButtonBlock={hendlerButtonBlock}\r\n                    numberBlock={2}\r\n                    coin={coin}\r\n                />\r\n                <ButtonBlock\r\n                    namesLettersButtons={stateLetters[3]}\r\n                    classname={stateLetters[6]}\r\n                    hendlerButtonBlock={hendlerButtonBlock}\r\n                    numberBlock={3}\r\n                    coin={coin}\r\n                />\r\n                <ButtonBlock\r\n                    namesLettersButtons={stateLetters[4]}\r\n                    classname={stateLetters[6]}\r\n                    hendlerButtonBlock={hendlerButtonBlock}\r\n                    numberBlock={4}\r\n                    coin={coin}\r\n                />\r\n                <ButtonBlock\r\n                    namesLettersButtons={stateLetters[5]}\r\n                    classname={stateLetters[6]}\r\n                    hendlerButtonBlock={hendlerButtonBlock}\r\n                    numberBlock={5}\r\n                    coin={coin}\r\n                />\r\n\r\n            </div>\r\n        \r\n     )\r\n}\r\n\r\nexport default connect()(LevelBlock)\r\n"]},"metadata":{},"sourceType":"module"}