{"ast":null,"code":"import { LETTERS_SELECT } from \"./types\";\nconst initialState = {\n  'letterSelect': 'X',\n  'letters': [{\n    type: 1,\n    name: \"а\"\n  }, {\n    type: 2,\n    name: \"б\"\n  }, {\n    type: 2,\n    name: \"В\"\n  }, {\n    type: 2,\n    name: \"Г\"\n  }, {\n    type: 2,\n    name: \"Д\"\n  }, {\n    type: 1,\n    name: \"е\"\n  }, {\n    type: 1,\n    name: \"ё\"\n  }, {\n    type: 2,\n    name: \"ж\"\n  }, {\n    type: 2,\n    name: \"з\"\n  }, {\n    type: 1,\n    name: \"и\"\n  }, {\n    type: 2,\n    name: \"к\"\n  }, {\n    type: 2,\n    name: \"л\"\n  }, {\n    type: 2,\n    name: \"м\"\n  }, {\n    type: 2,\n    name: \"н\"\n  }, {\n    type: 1,\n    name: \"о\"\n  }, {\n    type: 2,\n    name: \"п\"\n  }, {\n    type: 2,\n    name: \"р\"\n  }, {\n    type: 2,\n    name: \"с\"\n  }, {\n    type: 2,\n    name: \"т\"\n  }, {\n    type: 1,\n    name: \"у\"\n  }, {\n    type: 2,\n    name: \"ф\"\n  }, {\n    type: 2,\n    name: \"ц\"\n  }]\n};\n\nconst stateLetters = (state = initialState, action) => {\n  switch (action.type) {\n    case LETTERS_SELECT:\n      return { ...state,\n        letterSelect: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default stateLetters;","map":{"version":3,"sources":["D:/Обучение/React/projects/logopedist-game/src/store/LettersBlocks/reducerLetters.js"],"names":["LETTERS_SELECT","initialState","type","name","stateLetters","state","action","letterSelect","payload"],"mappings":"AAAA,SACIA,cADJ,QAEO,SAFP;AAIA,MAAMC,YAAY,GAAG;AACjB,kBAAgB,GADC;AAEjB,aAAW,CACP;AAAEC,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GADO,EAEP;AAAED,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GAFO,EAGP;AAAED,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GAHO,EAIP;AAAED,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GAJO,EAKP;AAAED,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GALO,EAMP;AAAED,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GANO,EAOP;AAAED,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GAPO,EAQP;AAAED,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GARO,EASP;AAAED,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GATO,EAUP;AAAED,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GAVO,EAWP;AAAED,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GAXO,EAYP;AAAED,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GAZO,EAaP;AAAED,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GAbO,EAcP;AAAED,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GAdO,EAeP;AAAED,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GAfO,EAgBP;AAAED,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GAhBO,EAiBP;AAAED,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GAjBO,EAkBP;AAAED,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GAlBO,EAmBP;AAAED,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GAnBO,EAoBP;AAAED,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GApBO,EAqBP;AAAED,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GArBO,EAsBP;AAAED,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GAtBO;AAFM,CAArB;;AA8BA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAEnD,UAAQA,MAAM,CAACJ,IAAf;AAEI,SAAKF,cAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHE,QAAAA,YAAY,EAAED,MAAM,CAACE;AAFlB,OAAP;;AAIJ;AACI,aAAOH,KAAP;AARR;AAUH,CAZD;;AAaA,eAAeD,YAAf","sourcesContent":["import {\r\n    LETTERS_SELECT,\r\n} from \"./types\";\r\n\r\nconst initialState = {\r\n    'letterSelect': 'X',\r\n    'letters': [\r\n        { type: 1, name: \"а\" },\r\n        { type: 2, name: \"б\" },\r\n        { type: 2, name: \"В\" },\r\n        { type: 2, name: \"Г\" },\r\n        { type: 2, name: \"Д\" },\r\n        { type: 1, name: \"е\" },\r\n        { type: 1, name: \"ё\" },\r\n        { type: 2, name: \"ж\" },\r\n        { type: 2, name: \"з\" },\r\n        { type: 1, name: \"и\" },\r\n        { type: 2, name: \"к\" },\r\n        { type: 2, name: \"л\" },\r\n        { type: 2, name: \"м\" },\r\n        { type: 2, name: \"н\" },\r\n        { type: 1, name: \"о\" },\r\n        { type: 2, name: \"п\" },\r\n        { type: 2, name: \"р\" },\r\n        { type: 2, name: \"с\" },\r\n        { type: 2, name: \"т\" },\r\n        { type: 1, name: \"у\" },\r\n        { type: 2, name: \"ф\" },\r\n        { type: 2, name: \"ц\" },\r\n    ],\r\n};\r\n\r\n\r\n\r\nconst stateLetters = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case LETTERS_SELECT:\r\n            return {\r\n                ...state,\r\n                letterSelect: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default stateLetters"]},"metadata":{},"sourceType":"module"}