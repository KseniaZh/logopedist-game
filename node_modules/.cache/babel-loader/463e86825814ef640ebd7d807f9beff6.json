{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\logopedist-game\\\\src\\\\containers\\\\Automation\\\\TypesLetters.js\";\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nconst letters = [{\n  type: 1,\n  name: \"а\"\n}, {\n  type: 2,\n  name: \"б\"\n}, {\n  type: 2,\n  name: \"В\"\n}, {\n  type: 2,\n  name: \"Г\"\n}, {\n  type: 2,\n  name: \"Д\"\n}, {\n  type: 1,\n  name: \"е\"\n}, {\n  type: 1,\n  name: \"ё\"\n}, {\n  type: 2,\n  name: \"ж\"\n}, {\n  type: 2,\n  name: \"з\"\n}, {\n  type: 1,\n  name: \"и\"\n}, {\n  type: 2,\n  name: \"к\"\n}, {\n  type: 2,\n  name: \"л\"\n}, {\n  type: 2,\n  name: \"м\"\n}, {\n  type: 2,\n  name: \"н\"\n}, {\n  type: 1,\n  name: \"о\"\n}, {\n  type: 2,\n  name: \"п\"\n}, {\n  type: 2,\n  name: \"р\"\n}, {\n  type: 2,\n  name: \"с\"\n}, {\n  type: 2,\n  name: \"т\"\n}, {\n  type: 1,\n  name: \"у\"\n}, {\n  type: 2,\n  name: \"ф\"\n}, {\n  type: 2,\n  name: \"ц\"\n}];\n\nfunction TypesLetters(props) {\n  const hendlerClick = letterName => {\n    console.log(\"click phone\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0431\\u0443\\u043A\\u0432\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: letters.map((item, index) => {\n        if (item.type === 1) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => hendlerClick(item.name),\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: `/automation/${item.type}/${item.name}/LevelBlock_1`,\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 41\n            }, this)\n          }, index + \"TypesLetters\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 36\n          }, this);\n        } else if (item.type === 2) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => hendlerClick(item.name),\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: `/automation/${item.type}/${item.name}/LevelBlock_1`,\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 41\n            }, this)\n          }, index + \"TypesLetters\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 36\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TypesLetters;\nexport default TypesLetters;\n\nvar _c;\n\n$RefreshReg$(_c, \"TypesLetters\");","map":{"version":3,"sources":["D:/Обучение/React/projects/logopedist-game/src/containers/Automation/TypesLetters.js"],"names":["React","NavLink","letters","type","name","TypesLetters","props","hendlerClick","letterName","console","log","map","item","index"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,MAAMC,OAAO,GAAG,CACZ;AAAEC,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CADY,EAEZ;AAAED,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAFY,EAGZ;AAAED,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAHY,EAIZ;AAAED,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAJY,EAKZ;AAAED,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CALY,EAMZ;AAAED,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CANY,EAOZ;AAAED,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAPY,EAQZ;AAAED,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CARY,EASZ;AAAED,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CATY,EAUZ;AAAED,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAVY,EAWZ;AAAED,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAXY,EAYZ;AAAED,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAZY,EAaZ;AAAED,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAbY,EAcZ;AAAED,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAdY,EAeZ;AAAED,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAfY,EAgBZ;AAAED,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAhBY,EAiBZ;AAAED,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAjBY,EAkBZ;AAAED,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAlBY,EAmBZ;AAAED,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAnBY,EAoBZ;AAAED,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CApBY,EAqBZ;AAAED,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CArBY,EAsBZ;AAAED,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAtBY,CAAhB;;AA0BA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAEzB,QAAMC,YAAY,GAAIC,UAAD,IAAgB;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH,GAFD;;AAIA,sBACA;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAEYR,OAAO,CAACS,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAEzB,YAAID,IAAI,CAACT,IAAL,KAAc,CAAlB,EAAqB;AACjB,8BAAO;AAEK,YAAA,OAAO,EAAE,MAAMI,YAAY,CAACK,IAAI,CAACR,IAAN,CAFhC;AAAA,mCAIK,QAAC,OAAD;AAAS,cAAA,EAAE,EAAG,eAAcQ,IAAI,CAACT,IAAK,IAAGS,IAAI,CAACR,IAAK,eAAnD;AAAA,wBAAoEQ,IAAI,CAACR;AAAzE;AAAA;AAAA;AAAA;AAAA;AAJL,aACUS,KAAK,GAAG,cADlB;AAAA;AAAA;AAAA;AAAA,kBAAP;AAMH,SAPD,MAOO,IAAID,IAAI,CAACT,IAAL,KAAc,CAAlB,EAAqB;AACxB,8BAAO;AAEK,YAAA,OAAO,EAAE,MAAMI,YAAY,CAACK,IAAI,CAACR,IAAN,CAFhC;AAAA,mCAIK,QAAC,OAAD;AAAS,cAAA,EAAE,EAAG,eAAcQ,IAAI,CAACT,IAAK,IAAGS,IAAI,CAACR,IAAK,eAAnD;AAAA,wBAAoEQ,IAAI,CAACR;AAAzE;AAAA;AAAA;AAAA;AAAA;AAJL,aACUS,KAAK,GAAG,cADlB;AAAA;AAAA;AAAA;AAAA,kBAAP;AAMH;AAER,OAlBG;AAFZ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AA4BH;;KAlCQR,Y;AAqCT,eAAeA,YAAf","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst letters = [\r\n    { type: 1, name: \"а\" },\r\n    { type: 2, name: \"б\" },\r\n    { type: 2, name: \"В\" },\r\n    { type: 2, name: \"Г\" },\r\n    { type: 2, name: \"Д\" },\r\n    { type: 1, name: \"е\" },\r\n    { type: 1, name: \"ё\" },\r\n    { type: 2, name: \"ж\" },\r\n    { type: 2, name: \"з\" },\r\n    { type: 1, name: \"и\" },\r\n    { type: 2, name: \"к\" },\r\n    { type: 2, name: \"л\" },\r\n    { type: 2, name: \"м\" },\r\n    { type: 2, name: \"н\" },\r\n    { type: 1, name: \"о\" },\r\n    { type: 2, name: \"п\" },\r\n    { type: 2, name: \"р\" },\r\n    { type: 2, name: \"с\" },\r\n    { type: 2, name: \"т\" },\r\n    { type: 1, name: \"у\" },\r\n    { type: 2, name: \"ф\" },\r\n    { type: 2, name: \"ц\" },\r\n];\r\n\r\n\r\nfunction TypesLetters(props) {\r\n\r\n    const hendlerClick = (letterName) => {\r\n        console.log(\"click phone\");\r\n    }\r\n\r\n    return(\r\n    <div>\r\n        <h2>Выберите букву</h2>\r\n        <ul>\r\n            {\r\n                    letters.map((item, index) => {\r\n\r\n                        if (item.type === 1) {\r\n                            return <li\r\n                                        key={index + \"TypesLetters\"}\r\n                                        onClick={() => hendlerClick(item.name)}\r\n                                    >\r\n                                        <NavLink to={`/automation/${item.type}/${item.name}/LevelBlock_1`}>{item.name}</NavLink>\r\n                                    </li>\r\n                        } else if (item.type === 2) {\r\n                            return <li\r\n                                        key={index + \"TypesLetters\"}\r\n                                        onClick={() => hendlerClick(item.name)}\r\n                                    >\r\n                                        <NavLink to={`/automation/${item.type}/${item.name}/LevelBlock_1`}>{item.name}</NavLink>\r\n                                    </li>\r\n                        }\r\n                    \r\n                })\r\n            }\r\n        </ul>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TypesLetters\r\n\r\n"]},"metadata":{},"sourceType":"module"}