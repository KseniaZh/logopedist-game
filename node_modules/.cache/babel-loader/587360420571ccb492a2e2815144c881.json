{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\logopedist-game\\\\src\\\\containers\\\\Automation\\\\AutomationButtonsBlocks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport AutomationBlocks from \"../../components/Automation/AutomationBlocks\";\nimport TypesLetters from \"./TypesLetters\";\n\nfunction AutomationButtonsBlocks(props) {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const hendlerLevelEnd = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: letterSelect === 'X' ? /*#__PURE__*/_jsxDEV(TypesLetters, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(AutomationBlocks, {\n      typeLetter: props.match.params.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 23\n    }, this)\n  }, void 0, false);\n}\n\n_s(AutomationButtonsBlocks, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AutomationButtonsBlocks;\nexport default connect()(AutomationButtonsBlocks);\n\nvar _c;\n\n$RefreshReg$(_c, \"AutomationButtonsBlocks\");","map":{"version":3,"sources":["D:/Обучение/React/projects/logopedist-game/src/containers/Automation/AutomationButtonsBlocks.js"],"names":["React","useState","connect","useDispatch","useSelector","AutomationBlocks","TypesLetters","AutomationButtonsBlocks","props","dispatch","hendlerLevelEnd","letterSelect","match","params","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,aAAlD;AAEA,OAAOC,gBAAP,MAA6B,8CAA7B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAGA,SAASC,uBAAT,CAAiCC,KAAjC,EAAwC;AAAA;;AAEpC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AAOA,QAAMO,eAAe,GAAG,MAAM,CAE7B,CAFD;;AAIA,sBACI;AAAA,cAEQC,YAAY,KAAK,GAAjB,gBACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADJ,gBAEM,QAAC,gBAAD;AACE,MAAA,UAAU,EAAEH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBC;AADjC;AAAA;AAAA;AAAA;AAAA;AAJd,mBADJ;AAWH;;GAxBQP,uB;UAEYJ,W;;;KAFZI,uB;AA0BT,eAAeL,OAAO,GAAGK,uBAAH,CAAtB","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport AutomationBlocks from \"../../components/Automation/AutomationBlocks\";\r\nimport TypesLetters from \"./TypesLetters\";\r\n\r\n\r\nfunction AutomationButtonsBlocks(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    const hendlerLevelEnd = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                letterSelect === 'X'?\r\n                    <TypesLetters />\r\n                    : <AutomationBlocks\r\n                        typeLetter={props.match.params.id}\r\n                    />\r\n            }\r\n        </>   \r\n     )\r\n}\r\n\r\nexport default connect()(AutomationButtonsBlocks)\r\n"]},"metadata":{},"sourceType":"module"}