{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\logopedist-game\\\\src\\\\components\\\\Automation\\\\ButtonBlock.js\";\nimport React, { useState } from 'react';\nimport ButtonAutomationBlock from '../../UserInterface/Buttons/ButtonAutomationBlock';\nimport CoinFinalLevelBlock from '../../UserInterface/Coins/CoinFinalLevelBlock';\n\nfunction ButtonBlock(props) {\n  //const [classnameSpan, setClassnameSpan] = useState({\n  //    'button_1': [props.coin[1]],\n  //    'button_2': [props.coin[1]],\n  //    'button_3': [props.coin[1]],\n  //})\n  //const hendlerButtonClick = (numberButton, numberButtonBlock) => {\n  //    let newClass = {\n  //        ...classnameSpan,\n  //        [numberButton]: ['heart', 'clicked'],\n  //    }\n  //    setClassnameSpan(newClass);\n  //    props.onclick(numberButton, numberButtonBlock);\n  //}\n  const funcCNSpan = numberButton => {\n    const arrClassName = ['heart'];\n\n    if (props.buttonBlockFlags[numberButton] === true) {\n      arrClassName.push('clicked');\n    }\n\n    return arrClassName.join(' ');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"button-block\",\n    children: [/*#__PURE__*/_jsxDEV(ButtonAutomationBlock, {\n      classname: props.classname,\n      onclick: hendlerButtonClick,\n      names: props.namesLettersButtons.namesLettersButton_1,\n      number: \"button_1\",\n      numberBlock: props.numberBlock\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: funcCNSpan('button_1'),\n      children: \"\\uD83E\\uDC9A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ButtonAutomationBlock, {\n      classname: props.classname,\n      onclick: hendlerButtonClick,\n      names: props.namesLettersButtons.namesLettersButton_2,\n      number: \"button_2\",\n      numberBlock: props.numberBlock\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: funcCNSpan('button_2'),\n      children: \"\\uD83E\\uDC9A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ButtonAutomationBlock, {\n      classname: props.classname,\n      onclick: hendlerButtonClick,\n      names: props.namesLettersButtons.namesLettersButton_3,\n      number: \"button_3\",\n      numberBlock: props.numberBlock\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: funcCNSpan('button_3'),\n      children: \"\\uD83E\\uDC9A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), props.buttonBlockCompleted === true ? /*#__PURE__*/_jsxDEV(CoinFinalLevelBlock, {\n      classname: \"coin-final-block-wrapper\",\n      classnameCoin: props.coin[1],\n      coin: props.coin[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"coin-final-block-wrapper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ButtonBlock;\nexport default ButtonBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonBlock\");","map":{"version":3,"sources":["D:/ÐžÐ±ÑƒÑ‡ÐµÐ½Ð¸Ðµ/React/projects/logopedist-game/src/components/Automation/ButtonBlock.js"],"names":["React","useState","ButtonAutomationBlock","CoinFinalLevelBlock","ButtonBlock","props","funcCNSpan","numberButton","arrClassName","buttonBlockFlags","push","join","classname","hendlerButtonClick","namesLettersButtons","namesLettersButton_1","numberBlock","namesLettersButton_2","namesLettersButton_3","buttonBlockCompleted","coin"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AAEA,OAAOC,qBAAP,MAAkC,mDAAlC;AACA,OAAOC,mBAAP,MAAgC,+CAAhC;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAExB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,UAAU,GAAIC,YAAD,IAAkB;AACjC,UAAMC,YAAY,GAAG,CAAC,OAAD,CAArB;;AACA,QAAIH,KAAK,CAACI,gBAAN,CAAuBF,YAAvB,MAAyC,IAA7C,EAAmD;AAC/CC,MAAAA,YAAY,CAACE,IAAb,CAAkB,SAAlB;AACH;;AACD,WAAOF,YAAY,CAACG,IAAb,CAAkB,GAAlB,CAAP;AACH,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BAEI,QAAC,qBAAD;AACQ,MAAA,SAAS,EAAEN,KAAK,CAACO,SADzB;AAEQ,MAAA,OAAO,EAAEC,kBAFjB;AAGQ,MAAA,KAAK,EAAER,KAAK,CAACS,mBAAN,CAA0BC,oBAHzC;AAIQ,MAAA,MAAM,EAAC,UAJf;AAKQ,MAAA,WAAW,EAAEV,KAAK,CAACW;AAL3B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAUI;AACI,MAAA,SAAS,EAAGV,UAAU,CAAC,UAAD,CAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAgBI,QAAC,qBAAD;AACQ,MAAA,SAAS,EAAED,KAAK,CAACO,SADzB;AAEQ,MAAA,OAAO,EAAEC,kBAFjB;AAGQ,MAAA,KAAK,EAAER,KAAK,CAACS,mBAAN,CAA0BG,oBAHzC;AAIQ,MAAA,MAAM,EAAC,UAJf;AAKQ,MAAA,WAAW,EAAEZ,KAAK,CAACW;AAL3B;AAAA;AAAA;AAAA;AAAA,YAhBJ,eAwBI;AACI,MAAA,SAAS,EAAGV,UAAU,CAAC,UAAD,CAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBJ,eA8BI,QAAC,qBAAD;AACQ,MAAA,SAAS,EAAED,KAAK,CAACO,SADzB;AAEQ,MAAA,OAAO,EAAEC,kBAFjB;AAGQ,MAAA,KAAK,EAAER,KAAK,CAACS,mBAAN,CAA0BI,oBAHzC;AAIQ,MAAA,MAAM,EAAC,UAJf;AAKQ,MAAA,WAAW,EAAEb,KAAK,CAACW;AAL3B;AAAA;AAAA;AAAA;AAAA,YA9BJ,eAsCI;AACI,MAAA,SAAS,EAAGV,UAAU,CAAC,UAAD,CAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtCJ,EA6CQD,KAAK,CAACc,oBAAN,KAA+B,IAA/B,gBACI,QAAC,mBAAD;AACI,MAAA,SAAS,EAAC,0BADd;AAEI,MAAA,aAAa,EAAEd,KAAK,CAACe,IAAN,CAAW,CAAX,CAFnB;AAGI,MAAA,IAAI,EAAEf,KAAK,CAACe,IAAN,CAAW,CAAX;AAHV;AAAA;AAAA;AAAA;AAAA,YADJ,gBAMK;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,YAnDb;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2DH;;KApFQhB,W;AAsFT,eAAeA,WAAf","sourcesContent":["import React, {useState } from 'react';\r\n\r\nimport ButtonAutomationBlock from '../../UserInterface/Buttons/ButtonAutomationBlock';\r\nimport CoinFinalLevelBlock from '../../UserInterface/Coins/CoinFinalLevelBlock';\r\n\r\nfunction ButtonBlock(props) {\r\n\r\n    //const [classnameSpan, setClassnameSpan] = useState({\r\n    //    'button_1': [props.coin[1]],\r\n    //    'button_2': [props.coin[1]],\r\n    //    'button_3': [props.coin[1]],\r\n    //})\r\n\r\n    //const hendlerButtonClick = (numberButton, numberButtonBlock) => {\r\n    //    let newClass = {\r\n    //        ...classnameSpan,\r\n    //        [numberButton]: ['heart', 'clicked'],\r\n    //    }\r\n    //    setClassnameSpan(newClass);\r\n    //    props.onclick(numberButton, numberButtonBlock);\r\n    //}\r\n\r\n    const funcCNSpan = (numberButton) => {\r\n        const arrClassName = ['heart'];\r\n        if (props.buttonBlockFlags[numberButton] === true) {\r\n            arrClassName.push('clicked');\r\n        }\r\n        return arrClassName.join(' ')\r\n    }\r\n\r\n    return (\r\n        <div className=\"button-block\">\r\n\r\n            <ButtonAutomationBlock\r\n                    classname={props.classname}\r\n                    onclick={hendlerButtonClick}\r\n                    names={props.namesLettersButtons.namesLettersButton_1}\r\n                    number='button_1'\r\n                    numberBlock={props.numberBlock}\r\n            />\r\n\r\n            <span\r\n                className={ funcCNSpan('button_1') }\r\n            >\t\r\n                ðŸ¢š\r\n            </span>\r\n\r\n            <ButtonAutomationBlock\r\n                    classname={props.classname}\r\n                    onclick={hendlerButtonClick}\r\n                    names={props.namesLettersButtons.namesLettersButton_2}\r\n                    number='button_2'\r\n                    numberBlock={props.numberBlock}\r\n            />\r\n\r\n            <span\r\n                className={ funcCNSpan('button_2')}\r\n            >\t\r\n                ðŸ¢š\r\n            </span>\r\n\r\n            <ButtonAutomationBlock\r\n                    classname={props.classname}\r\n                    onclick={hendlerButtonClick}\r\n                    names={props.namesLettersButtons.namesLettersButton_3}\r\n                    number='button_3'\r\n                    numberBlock={props.numberBlock}\r\n            />\r\n\r\n            <span\r\n                className={ funcCNSpan('button_3')}\r\n            >\r\n                ðŸ¢š\r\n            </span>\r\n\r\n            {\r\n                props.buttonBlockCompleted === true?\r\n                    <CoinFinalLevelBlock\r\n                        classname='coin-final-block-wrapper'\r\n                        classnameCoin={props.coin[1]}\r\n                        coin={props.coin[0]}\r\n                    />\r\n                    :<span className='coin-final-block-wrapper'></span>\r\n            }\r\n            \r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ButtonBlock\r\n"]},"metadata":{},"sourceType":"module"}