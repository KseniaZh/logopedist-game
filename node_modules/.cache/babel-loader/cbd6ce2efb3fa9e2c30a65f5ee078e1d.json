{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\logopedist-game\\\\src\\\\components\\\\WordsAutomation\\\\WordBlocks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport BoxCoinsLevelCompleted from '../../components/Completed/BoxCoinsLevelCompleted';\nimport SelectingLevelBlock from '../../UserInterface/SelectingLevelBlock';\nimport LevelBlockWord from '../../components/WordsAutomation/LevelBlockWord';\nimport { sourceStateLettersBlocks } from '../../store/LettersBlocks/actionsLettersBlocks';\nimport { changeFlagLevelWordCompleted, nullFlagLevelWordCompleted } from '../../store/LevelCompleted/actionsLevelWordsFinal';\nimport { finalLetterWords } from '../../store/LevelCompleted/actionsFinalLetterWords';\nimport { boxCoinsDeposit } from '../../store/Coins/actionsLevelCoins';\n\nfunction WordBlocks(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const letterSelect = useSelector(state => state.stateLetters.letterSelect);\n  const namesLevelBlock = useSelector(state => state.stateLevelCoins.wordsBlocks);\n  const stateLevelWordsFinal = useSelector(state => state.stateLevelWordsFinal); //флаги прохождения уровней в букве\n\n  const stateWords = useSelector(state => state.stateWords);\n  const boxCoinsLetter = useSelector(state => state.stateLevelCoins.boxCoinsLetter);\n  const stateFinalLetterWords = useSelector(state => state.stateFinalLetterWords); // флаги по всем буквам по учету прохождения всех уровней\n\n  const [numberWordBlock, setNumberWordBlock] = useState(0);\n  const [counter, setCounter] = useState(0); //счетчик переключиния слов, в массиве 10 слов\n\n  const hendlerSelectWordBlock = data => {\n    setNumberWordBlock(data);\n    setCounter(0);\n  };\n\n  const coins = useSelector(state => state.stateLevelCoins.wordsBlocks);\n\n  const hendlerClickWord = numberWord => {\n    setCounter(numberWord);\n\n    if (numberWord === 10) {\n      dispatch(changeFlagLevelWordCompleted(stateLevelWordsFinal, letterSelect, numberWordBlock));\n      setCounter(0); // уровень пройден, в банку падает монетка\n\n      dispatch(boxCoinsDeposit(boxCoinsLetter, letterSelect, coins[numberWordBlock])); //берем массив флагов прохождения уровней по выбранной букве\n\n      if (stateLevelWordsFinal[letterSelect].every(x => x === true)) {\n        dispatch(finalLetterWords(stateFinalLetterWords, letterSelect));\n        console.log(' УРОВЕНЬ ПРОЙДЕН!!!');\n      }\n    }\n  };\n\n  const hendlerLevelWordsRepeat = () => {\n    setCounter(0); // 1 слово\n    //снимаем флаг прохождения уровня\n\n    dispatch(nullFlagLevelWordCompleted(stateLevelWordsFinal, letterSelect, numberWordBlock));\n  };\n\n  useEffect(() => {\n    return () => {\n      dispatch(sourceStateLettersBlocks());\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"automation-buttons-blocks\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\u0422\\u0438\\u043F \\u0431\\u0443\\u043A\\u0432\\u044B \", props.typeLetter, \" \\u0431\\u0443\\u043A\\u0432\\u0430 \", letterSelect, /*#__PURE__*/_jsxDEV(SelectingLevelBlock, {\n        numbersLevelBlock: Object.keys(stateWords[letterSelect]),\n        namesLevels: namesLevelBlock,\n        onclick: hendlerSelectWordBlock,\n        levelsComplied: stateLevelWordsFinal[letterSelect],\n        coins: coins\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LevelBlockWord, {\n      onclickWord: hendlerClickWord,\n      onclickRepeat: hendlerLevelWordsRepeat,\n      data: counter + 1,\n      name: stateWords[letterSelect][numberWordBlock][counter],\n      flagLevelFinal: stateLevelWordsFinal[letterSelect][numberWordBlock],\n      coin: coins[numberWordBlock]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BoxCoinsLevelCompleted, {\n      boxCoinsLetter: boxCoinsLetter[letterSelect]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WordBlocks, \"b3XZkKf8ZJ01SXVW1hzb+3ost9s=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = WordBlocks;\nexport default connect()(WordBlocks);\n\nvar _c;\n\n$RefreshReg$(_c, \"WordBlocks\");","map":{"version":3,"sources":["D:/Обучение/React/projects/logopedist-game/src/components/WordsAutomation/WordBlocks.js"],"names":["React","useEffect","useState","connect","useDispatch","useSelector","BoxCoinsLevelCompleted","SelectingLevelBlock","LevelBlockWord","sourceStateLettersBlocks","changeFlagLevelWordCompleted","nullFlagLevelWordCompleted","finalLetterWords","boxCoinsDeposit","WordBlocks","props","dispatch","letterSelect","state","stateLetters","namesLevelBlock","stateLevelCoins","wordsBlocks","stateLevelWordsFinal","stateWords","boxCoinsLetter","stateFinalLetterWords","numberWordBlock","setNumberWordBlock","counter","setCounter","hendlerSelectWordBlock","data","coins","hendlerClickWord","numberWord","every","x","console","log","hendlerLevelWordsRepeat","typeLetter","Object","keys"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport BoxCoinsLevelCompleted from '../../components/Completed/BoxCoinsLevelCompleted';\r\nimport SelectingLevelBlock from '../../UserInterface/SelectingLevelBlock';\r\nimport LevelBlockWord from '../../components/WordsAutomation/LevelBlockWord';\r\n\r\nimport {\r\n    sourceStateLettersBlocks,\r\n} from '../../store/LettersBlocks/actionsLettersBlocks';\r\nimport {\r\n    changeFlagLevelWordCompleted,\r\n    nullFlagLevelWordCompleted\r\n} from '../../store/LevelCompleted/actionsLevelWordsFinal';\r\nimport {\r\n    finalLetterWords,\r\n} from '../../store/LevelCompleted/actionsFinalLetterWords';\r\nimport {\r\n    boxCoinsDeposit\r\n} from '../../store/Coins/actionsLevelCoins';\r\n\r\nfunction WordBlocks(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const letterSelect = useSelector(state => state.stateLetters.letterSelect);\r\n    const namesLevelBlock = useSelector(state => state.stateLevelCoins.wordsBlocks);\r\n    const stateLevelWordsFinal = useSelector(state => state.stateLevelWordsFinal); //флаги прохождения уровней в букве\r\n    const stateWords = useSelector(state => state.stateWords);\r\n    const boxCoinsLetter = useSelector(state => state.stateLevelCoins.boxCoinsLetter)\r\n    \r\n    const stateFinalLetterWords = useSelector(state => state.stateFinalLetterWords);// флаги по всем буквам по учету прохождения всех уровней\r\n    \r\n    const [numberWordBlock, setNumberWordBlock] = useState(0);\r\n    \r\n    const [counter, setCounter] = useState(0);//счетчик переключиния слов, в массиве 10 слов\r\n\r\n    const hendlerSelectWordBlock = (data) => {\r\n        setNumberWordBlock(data);\r\n        setCounter(0);\r\n    };\r\n    const coins = useSelector(state => state.stateLevelCoins.wordsBlocks);\r\n\r\n\r\n \r\n    const hendlerClickWord = (numberWord) => {\r\n        setCounter(numberWord);\r\n        if (numberWord === 10) {\r\n            dispatch(changeFlagLevelWordCompleted(stateLevelWordsFinal, letterSelect, numberWordBlock));\r\n            setCounter(0);\r\n\r\n            // уровень пройден, в банку падает монетка\r\n            dispatch(boxCoinsDeposit(boxCoinsLetter, letterSelect, coins[numberWordBlock]));\r\n\r\n            //берем массив флагов прохождения уровней по выбранной букве\r\n            if (stateLevelWordsFinal[letterSelect].every(x => x === true)) {\r\n                dispatch(finalLetterWords(stateFinalLetterWords, letterSelect));\r\n                console.log(' УРОВЕНЬ ПРОЙДЕН!!!')\r\n            }\r\n        }\r\n    }\r\n    const hendlerLevelWordsRepeat = () => {\r\n        setCounter(0); // 1 слово\r\n        //снимаем флаг прохождения уровня\r\n        dispatch(nullFlagLevelWordCompleted(stateLevelWordsFinal, letterSelect, numberWordBlock));\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(sourceStateLettersBlocks());\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"automation-buttons-blocks\">\r\n\r\n\r\n            <div>\r\n                Тип буквы {props.typeLetter} буква {letterSelect}\r\n\r\n                <SelectingLevelBlock\r\n                    numbersLevelBlock={Object.keys(stateWords[letterSelect])}\r\n                    namesLevels={namesLevelBlock}\r\n                    onclick={hendlerSelectWordBlock}\r\n                    levelsComplied={stateLevelWordsFinal[letterSelect]}\r\n                    coins={coins}\r\n                />\r\n            </div>\r\n\r\n            <LevelBlockWord\r\n                onclickWord={hendlerClickWord}\r\n                onclickRepeat={hendlerLevelWordsRepeat}\r\n                data={counter + 1}\r\n                name={stateWords[letterSelect][numberWordBlock][counter]}\r\n                flagLevelFinal={stateLevelWordsFinal[letterSelect][numberWordBlock]}\r\n                coin={coins[numberWordBlock]}\r\n            />\r\n\r\n            <BoxCoinsLevelCompleted\r\n                boxCoinsLetter={boxCoinsLetter[letterSelect]}\r\n            />\r\n               \r\n        </div>\r\n        \r\n     )\r\n}\r\n\r\nexport default connect()(WordBlocks)\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}